{"version":3,"sources":["containers/Menu/Menu.module.css","containers/UserProfile/UserProfile.module.css","images/back-icon.svg","containers/UpdateProfile/UpdateProfile.module.css","components/ImageUpload/ImageUpload.module.css","components/InputField/InputField.module.css","components/Counter/Counter.module.css","containers/NewPost/NewPost.module.css","components/Buttons/TabBtn/TabBtn.module.css","containers/CommentPost/CommentPost.module.css","images/generic_profile_picture.jpg","components/Buttons/UIBtn/UIBtn.module.css","components/UserHeader/UserHeader.module.css","components/SelectField/SelectField.module.css","components/Buttons/ReactionBtn/ReactionBtn.module.css","components/Post/Post.module.css","images/person-icon.svg","images/logo.png","images/password-icon.svg","components/Modal/Modal.module.css","containers/Posts/Posts.module.css","images/signup-icon.svg","images/login-icon.svg","images/post-icon.svg","images/categories-icon.svg","images/close-icon.svg","images/send-icon.svg","images/modify-icon.svg","components/Buttons/NavBtn/NavBtn.module.css","components/Buttons/ActionBtn/ActionBtn.module.css","components/ConfirmModal/ConfirmModal.module.css","components/Comment/Comment.module.css","images/menu-icon.svg","images/agenda-icon.svg","images/logout-icon.svg","images/posts-icon.svg","components/Backdrop/Backdrop.module.css","components/ErrorModal/ErrorModal.module.css","images/lastname-icon.svg","images/email-icon.svg","containers/SignUp/Signup.module.css","images/clock-icon.svg","images/coffee-icon.svg","images/like-icon.svg","images/dislike-icon.svg","images/comment-icon.svg","images/comments-icon.svg","images/x-icon.svg","components/PostList/PostList.module.css","images/linkedin-icon.svg","images/linkedin-grey-icon.svg","images/logotype.svg","images/delete-icon.svg","images/ok-icon.svg","images/image-icon.svg","hooks/auth-hook.js","context/auth-context.js","hooks/window-hook.js","components/Buttons/NavBtn/NavBtn.js","components/Nav/nav_home.js","components/Buttons/ActionBtn/ActionBtn.js","components/Nav/nav_login.js","components/Nav/nav_signup.js","components/Nav/nav_posts.js","components/Nav/nav_menu.js","components/Nav/Nav_newpost.js","components/Nav/nav_comments.js","components/Nav/nav_profile.js","components/Nav/nav_update.js","components/Nav/Nav.js","hooks/httpRequest-hook.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","components/Buttons/UIBtn/UIBtn.js","components/ErrorModal/ErrorModal.js","components/LoadingSpinner/LoadingSpinner.js","containers/Menu/Menu.js","containers/Layout/Layout.js","containers/Home/Home.js","hooks/form-hook.js","utils/validators.js","components/InputField/InputField.js","containers/Login/Login.js","containers/SignUp/SignUp.js","components/Buttons/TabBtn/TabBtn.js","components/Buttons/ReactionBtn/ReactionBtn.js","components/UserHeader/UserHeader.js","components/Post/Post.js","components/PostList/PostList.js","containers/Posts/Posts.js","components/Counter/Counter.js","containers/UserProfile/UserProfile.js","components/ConfirmModal/ConfirmModal.js","components/ImageUpload/ImageUpload.js","containers/UpdateProfile/UpdateProfile.js","components/Comment/Comment.js","containers/CommentPost/CommentPost.js","components/SelectField/SelectField.js","containers/NewPost/NewPost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logoutTimer","AuthContext","createContext","isLoggedIn","userId","token","account","login","logout","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","NavBtn","props","to","link","className","btnStyle","styles","btn","icon","iconColor","src","alt","textStyle","text","name","NavHome","signup","ActionBtn","id","form","type","onClick","NavLogin","back","backHandle","NavSignUp","NavPost","menu","post","categories","NavMenu","close","NavNewPost","send","NavComments","withRouter","modifyBtn","auth","useContext","Number","location","pathname","split","modify","nav","e","preventDefault","history","goBack","commentHandle","console","log","useHttpRequest","isLoading","setIsLoading","error","setError","activeRequest","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","Backdrop","ReactDOM","createPortal","backdrop","document","getElementById","ModalOverlay","content","modal","style","onSubmit","event","modal__content","contentClass","children","modal__footer","footerClass","footer","Modal","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","UIBtn","btnType","valid","cancel","warning","buttonClass","justify","ErrorModal","onClear","header","LoadingSpinner","asOverlay","Menu","useHistory","profileData","setProfileData","mounted","process","Authorization","userData","fetchPosts","navLinks","border","posts","container","cover","background_img","wrapper","photo_url","GenProfile","profile_photo","firstName","lastName","hero_block","title","list","person","agenda","logout_margin","path","mobileLayout","desktopLayout","Home","logo","formReducer","state","action","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","inputData","formValidity","MinLength","val","MaxLength","validate","validators","validator","trim","length","test","inputReducer","isTouched","InputField","initialValue","initialValid","inputState","onInput","typeOfBox","borderColor","changeHandler","target","touchHandler","textIsWhite","white_box","border_white","box","label","htmlFor","element","input_height","placeholder","autoComplete","autocomplete","onChange","onBlur","textarea","rows","block","invalid","input_error","errorText","Login","email","password","inputHandler","loginHandler","data","JSON","stringify","hasLabel","SignUp","signupHandler","toUpperCase","input_list","lastname","TabBtn","active","btn_active","container_active","text_active","icon_active","ReactionBtn","reactionColor","reaction","like","dislike","comment","comments","reaction_btn","styling","onReaction","UserHeader","newPostDate","category","deleteBtn","postDate","Date","date","today","diffTime","Math","abs","ceil","floor","text_division","UserId","delete_btn","onDelete","delete_icon","DeleteX","photo","postId","likes","likesCounter","setLikesCounter","dislikes","dislikesCounter","setDislikesCounter","userReaction","setUserReaction","hasReacted","setHasReacted","commentBlock","userReactionHandler","currentTarget","PostId","reacted","then","catch","err","DeletePostHandler","image_url","post_link","comment_btn","push_right","reactions","PostList","items","map","key","post_date","onDeletePost","Posts","setPosts","mostRecents","mostLiked","activeBtn","setActiveBtn","initData","newPost","fetchMostRecent","postsData","fetchMostLiked","mostLikedData","postIcon","clockIcon","coffeeIcon","deletedPostId","prevPosts","Counter","counter","count","postsCount","logotype","likesCount","UserProfile","useParams","fetchUser","desktopNav","iconStyle","class_mod","linkedin_url","href","rel","Linkedin_icon","LinkedinIcon","LinkedinGreyIcon","department","role","ConfirmModal","okIcon","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","pickedImageHandler","pickedFile","fileIsValid","files","image_container","preview_post","red_banner_post","banner_text_post","icon_block","Image","accept","display","photo_container","preview_img","red_banner","banner_text","UpdateProfile","userDataState","setUserDataState","showInfo","setShowInfo","showConfirmModal","setShowConfirmModal","image","setFormState","updateProfileHandler","formData","FormData","append","openConfirmModalHandler","updatePasswordHandler","showDeleteMessage","deleteUserHandler","setTimeout","center","update_list","maxLength","deleteIcon","btn_block","Comment","DeleteCommentHandler","onDeleteComment","CommentPost","setPost","setComments","comments_list","fetchPost","postCommentHandler","newCommentData","prevComments","deleteCommentHandler","deletedCommentId","index","comment_date","comment_wrap","comment_form","SelectField","setCategory","categoryPickerRef","dropdown","dropdown_btn","ref","pickedCategory","categoryIsValid","option","options","categoryIs","NewPost","setCategories","sendBtn","backBtn","sendPostHandler","send_btn","back_btn","backIcon","head","tab","tab_border","App","routes","setToken","setUserId","setAccount","tokenExpirationDate","setTokenExpirationDate","expirationDate","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","clearTimeout","storedData","parse","getItem","useAuth","exact","component","Signup","Provider","Boolean","hostname","match","app","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cec1330.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background_img\":\"Menu_background_img__38xqw\",\"cover\":\"Menu_cover__2QfiB\",\"wrapper\":\"Menu_wrapper___A9bb\",\"profile_photo\":\"Menu_profile_photo__1CRng\",\"hero_block\":\"Menu_hero_block__2TqsP\",\"title\":\"Menu_title__1kCzW\",\"list\":\"Menu_list__3420P\",\"btn\":\"Menu_btn__X1pAl\",\"logout_margin\":\"Menu_logout_margin__1Xk0m\",\"border\":\"Menu_border__2f53Y\",\"text\":\"Menu_text__UQLh1\",\"icon\":\"Menu_icon__gdlxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"class_mod\":\"UserProfile_class_mod__16KNs\",\"background_img\":\"UserProfile_background_img__2CQaq\",\"wrapper\":\"UserProfile_wrapper__jPFIA\",\"profile_photo\":\"UserProfile_profile_photo__1Tazv\",\"hero_block\":\"UserProfile_hero_block__2HBmg\",\"title\":\"UserProfile_title__3CVsm\",\"Linkedin_icon\":\"UserProfile_Linkedin_icon__2CkDm\",\"department\":\"UserProfile_department__3X9cU\",\"role\":\"UserProfile_role__2U9PO\",\"email\":\"UserProfile_email__3Nyqf\",\"btnStyle\":\"UserProfile_btnStyle__35lhE\",\"iconStyle\":\"UserProfile_iconStyle__aiV3S\",\"nav\":\"UserProfile_nav__1seiB\"};","module.exports = __webpack_public_path__ + \"static/media/back-icon.69eb6e06.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"class_mod\":\"UpdateProfile_class_mod__25dgP\",\"background_img\":\"UpdateProfile_background_img__Bh1p6\",\"wrapper\":\"UpdateProfile_wrapper__2_W_v\",\"photo_container\":\"UpdateProfile_photo_container__uJcWh\",\"profile_photo\":\"UpdateProfile_profile_photo__10YU2\",\"preview_img\":\"UpdateProfile_preview_img__3AtZ8\",\"red_banner\":\"UpdateProfile_red_banner__pNoyR\",\"banner_text\":\"UpdateProfile_banner_text__304PR\",\"title\":\"UpdateProfile_title__3svLX\",\"role\":\"UpdateProfile_role__2SyI6\",\"update_list\":\"UpdateProfile_update_list__3IEE_\",\"btn_list\":\"UpdateProfile_btn_list__3kB-Q\",\"btn_block\":\"UpdateProfile_btn_block__27N7E\",\"btnStyle\":\"UpdateProfile_btnStyle__3b7Nq\",\"iconStyle\":\"UpdateProfile_iconStyle__3aM6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image-upload__preview\":\"ImageUpload_image-upload__preview__1aPwU\",\"photo_container\":\"ImageUpload_photo_container__h-9K1\",\"profile_photo\":\"ImageUpload_profile_photo__3ycyX\",\"preview_img\":\"ImageUpload_preview_img__1M4BB\",\"red_banner\":\"ImageUpload_red_banner__FkUfd\",\"banner_text\":\"ImageUpload_banner_text__1clgr\",\"image_container\":\"ImageUpload_image_container__1fjxI\",\"icon_block\":\"ImageUpload_icon_block__2d8se\",\"icon\":\"ImageUpload_icon__TrePL\",\"text\":\"ImageUpload_text__25s2J\",\"preview_post\":\"ImageUpload_preview_post__2o_Z0\",\"red_banner_post\":\"ImageUpload_red_banner_post__emvt7\",\"banner_text_post\":\"ImageUpload_banner_text_post__2OVEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"InputField_block__3Z4Ew\",\"border_white\":\"InputField_border_white__j4Tl-\",\"invalid\":\"InputField_invalid__1V_wR\",\"label\":\"InputField_label__1bYzx\",\"input_error\":\"InputField_input_error__eZQes\",\"wrapper\":\"InputField_wrapper__30toi\",\"input_height\":\"InputField_input_height__1w_Pg\",\"textarea\":\"InputField_textarea__31sHW\",\"icon\":\"InputField_icon__3G-xh\",\"box\":\"InputField_box__2c4T3\",\"white_box\":\"InputField_white_box__1x-zJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Counter_block__1IQGN\",\"counter\":\"Counter_counter__1TppR\",\"title\":\"Counter_title__DD1Hs\",\"count\":\"Counter_count__3i1th\",\"text\":\"Counter_text__3ouX4\",\"logotype\":\"Counter_logotype__2JUJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewPost_container__yjssi\",\"head\":\"NewPost_head__3a5ci\",\"tab\":\"NewPost_tab__1WDY2\",\"tab_border\":\"NewPost_tab_border__2Dhfa\",\"wrapper\":\"NewPost_wrapper__3-CwQ\",\"title\":\"NewPost_title__1orbJ\",\"form\":\"NewPost_form__TdeRm\",\"back_btn\":\"NewPost_back_btn__2G847\",\"send_btn\":\"NewPost_send_btn__3hAc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_active\":\"TabBtn_btn_active__26XVG\",\"container_active\":\"TabBtn_container_active__1A7rL\",\"icon_active\":\"TabBtn_icon_active__17Vci\",\"text_active\":\"TabBtn_text_active__zMsFx\",\"btn\":\"TabBtn_btn__2uC5t\",\"container\":\"TabBtn_container__1B7e2\",\"icon\":\"TabBtn_icon__3m7IN\",\"text\":\"TabBtn_text__2s_8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CommentPost_container__23RUZ\",\"wrapper\":\"CommentPost_wrapper__EwFuZ\",\"comment_form\":\"CommentPost_comment_form__3iAGW\",\"comment_wrap\":\"CommentPost_comment_wrap__1JaBM\",\"btn\":\"CommentPost_btn__2qso_\",\"icon\":\"CommentPost_icon__2WgTm\",\"box\":\"CommentPost_box__1GPGD\"};","module.exports = __webpack_public_path__ + \"static/media/generic_profile_picture.ffc734c4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"UIBtn_btn__N6iYR\",\"text\":\"UIBtn_text__xz3uR\",\"icon\":\"UIBtn_icon__1cT3O\",\"justify\":\"UIBtn_justify__3bSeM\",\"warning\":\"UIBtn_warning__3I7AU\",\"valid\":\"UIBtn_valid__2pyig\",\"cancel\":\"UIBtn_cancel__2nJ8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"UserHeader_block__3Hac-\",\"photo\":\"UserHeader_photo__3f4as\",\"text\":\"UserHeader_text__2s189\",\"text_division\":\"UserHeader_text_division__1-K40\",\"delete_btn\":\"UserHeader_delete_btn___eV99\",\"delete_icon\":\"UserHeader_delete_icon__1EWPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SelectField_label__2wZZM\",\"dropdown\":\"SelectField_dropdown__2SpfF\",\"dropdown_btn\":\"SelectField_dropdown_btn__1CQts\",\"option\":\"SelectField_option__P3WRu\",\"input_error\":\"SelectField_input_error__30Bmm\",\"invalid\":\"SelectField_invalid__147oe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reaction_btn\":\"ReactionBtn_reaction_btn__1Bgt1\",\"icon\":\"ReactionBtn_icon__mIbal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Post_block__38d65\",\"title\":\"Post_title__2DVAi\",\"photo\":\"Post_photo__vWhTV\",\"reactions\":\"Post_reactions__3CJmz\",\"comments_btn\":\"Post_comments_btn__1_V_j\",\"push_right\":\"Post_push_right__3ftgG\",\"comment_btn\":\"Post_comment_btn__3j2Pz\"};","module.exports = __webpack_public_path__ + \"static/media/person-icon.13fff284.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9fbde2c2.png\";","module.exports = __webpack_public_path__ + \"static/media/password-icon.3807eb0c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__-1MCv\",\"modal__content\":\"Modal_modal__content__3VqUc\",\"modal__footer\":\"Modal_modal__footer__3S5F9\",\"modal-enter\":\"Modal_modal-enter__3QJmg\",\"modal-enter-active\":\"Modal_modal-enter-active__2zSdo\",\"modal-exit\":\"Modal_modal-exit__1Lmk7\",\"modal-exit-active\":\"Modal_modal-exit-active__1GIeg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Posts_header__zOZoC\",\"container\":\"Posts_container__vip4Q\",\"btn\":\"Posts_btn__2JiWD\",\"text\":\"Posts_text__3vnbo\",\"icon\":\"Posts_icon__3gQXE\"};","module.exports = __webpack_public_path__ + \"static/media/signup-icon.34cd9cab.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-icon.d2e9ba6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/post-icon.b8ec1592.svg\";","module.exports = __webpack_public_path__ + \"static/media/categories-icon.a2cc9e0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-icon.80a3ebc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/send-icon.56611ebb.svg\";","module.exports = __webpack_public_path__ + \"static/media/modify-icon.b5ae602e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"NavBtn_btn__pL39T\",\"icon\":\"NavBtn_icon__3ZAh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ActionBtn_btn__3aNiu\",\"icon\":\"ActionBtn_icon__3RizB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ConfirmModal_btn__20rU_\",\"okIcon\":\"ConfirmModal_okIcon__3gHcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Comment_block__3Cr_7\",\"text\":\"Comment_text__3vWSc\"};","module.exports = __webpack_public_path__ + \"static/media/menu-icon.e07316bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/agenda-icon.1a8a09ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout-icon.d93f43f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/posts-icon.b39fb484.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__28QCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ErrorModal_btn__1_N58\"};","module.exports = __webpack_public_path__ + \"static/media/lastname-icon.ab6f7952.svg\";","module.exports = __webpack_public_path__ + \"static/media/email-icon.75cb8ec9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_list\":\"Signup_input_list__yjwKS\"};","module.exports = __webpack_public_path__ + \"static/media/clock-icon.400e2e3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/coffee-icon.3849d652.svg\";","module.exports = __webpack_public_path__ + \"static/media/like-icon.d8a1ba16.svg\";","module.exports = __webpack_public_path__ + \"static/media/dislike-icon.06913d04.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment-icon.e600818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/comments-icon.2f8c4bd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-icon.eeaccb41.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PostList_header__1aZJu\",\"container\":\"PostList_container__2JMvx\"};","module.exports = __webpack_public_path__ + \"static/media/linkedin-icon.06701358.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-grey-icon.53c46fed.svg\";","module.exports = __webpack_public_path__ + \"static/media/logotype.9c126e27.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon.5ce044d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok-icon.353b7575.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-icon.937fb3c8.svg\";","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    // UseState du AuthContext\r\n    const [token, setToken] = useState(false);\r\n    const [userId, setUserId] = useState(false);\r\n    const [account, setAccount] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n    // Login usCallback pour ne pas rentrer dans un cycle infinit\r\n    const login = useCallback((userId, token, account, expirationDate) => {\r\n        setUserId(userId);\r\n        setToken(token);\r\n        setAccount(account);\r\n\r\n        // Creér une date 24h dans le futur (validité de la session)\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 * 24);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n\r\n        // Stocker les paramètres dans le localStorage du navigateur\r\n        localStorage.setItem(\r\n            \"userData\",\r\n            JSON.stringify({\r\n                userId: userId,\r\n                token: token,\r\n                account: account,\r\n                expiration: tokenExpirationDate.toISOString(),\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    // logout remets tout à null et supprime l'objet du localStorage\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        setAccount(null);\r\n        setTokenExpirationDate(null);\r\n        localStorage.removeItem(\"userData\");\r\n    }, []);\r\n\r\n    // Timer de la session\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    // Auto-login à l'application en utilisant le localStorage pour s'identifier\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n        if (\r\n            storedData &&\r\n            storedData.userId &&\r\n            storedData.token &&\r\n            storedData.account &&\r\n            new Date(storedData.expiration) > new Date()\r\n        ) {\r\n            login(storedData.userId, storedData.token, storedData.account, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { userId, token, account, login, logout };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null,\r\n    account: null,\r\n    login: () => {},\r\n    logout: () => {},\r\n});\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n}\r\n\r\nexport const useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport styles from \"./NavBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<NavBtn \r\n    link={props.link} \r\n    btnStyle={styles.class-name}\r\n    textStyle={styles.class-name}\r\n    icon={icon-name}\r\n/>\r\n\r\n*/\r\n\r\nconst NavBtn = (props) => {\r\n    return (\r\n        <Link to={props.link} className={props.btnStyle || styles.btn}>\r\n            <img className={`${styles.icon} ${props.iconColor}`} src={props.icon} alt=\"\" />\r\n            <span className={props.textStyle || styles.text}>{props.name}</span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default NavBtn;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport signup from \"../../images/signup-icon.svg\";\r\nimport login from \"../../images/login-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavHome = () => {\r\n    return (\r\n        <>\r\n            <NavBtn icon={login} name=\"connexion\" link=\"/login\" iconColor=\"icon_white\" />\r\n            <NavBtn icon={signup} name=\"s'inscrire\" link=\"/signup\" iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavHome;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./ActionBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<ActionBtn \r\n    id={props.id}\r\n    form={id du formulaire} \r\n    type={type de bouton}\r\n    onClick={fonction onClick}\r\n    icon={icon-name}\r\n    iconColor={couleur de l'icône}\r\n/>\r\n\r\n*/\r\n\r\nconst ActionBtn = (props) => {\r\n    return (\r\n        <button id={props.id} form={props.form} className={styles.btn} type={props.type} onClick={props.onClick}>\r\n            <img className={`${styles.icon} ${props.iconColor}`} src={props.icon} alt=\"\" />\r\n            {props.name}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ActionBtn;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport login from \"../../images/login-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../../components/Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavLogin = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n            <ActionBtn\r\n                id=\"login-btn\"\r\n                form=\"login-form\"\r\n                name=\"connexion\"\r\n                type=\"submit\"\r\n                icon={login}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavLogin;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport signup from \"../../images/signup-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavSignUp = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n            <ActionBtn\r\n                id=\"signup-btn\"\r\n                form=\"signup-form\"\r\n                name=\"s'inscrire\"\r\n                type=\"submit\"\r\n                icon={signup}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavSignUp;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport menu from \"../../images/menu-icon.svg\";\r\nimport post from \"../../images/post-icon.svg\";\r\nimport categories from \"../../images/categories-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavPost = () => {\r\n    return (\r\n        <>\r\n            <NavBtn id=\"menu\" name=\"menu\" icon={menu} link=\"/menu\" iconColor=\"icon_white\" />\r\n            <NavBtn id=\"post\" name=\"publier\" icon={post} link=\"/posts/new\" iconColor=\"icon_white\" />\r\n            <NavBtn id=\"categories\" name=\"catégories\" icon={categories} link=\"/posts\" iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavPost;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport close from \"../../images/close-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavMenu = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={close} name=\"fermer\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavMenu;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport send from \"../../images/send-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavNewPost = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n            <ActionBtn\r\n                id=\"send-post-btn\"\r\n                form=\"send-post-form\"\r\n                name=\"publier\"\r\n                type=\"submit\"\r\n                icon={send}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavNewPost;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../../components/Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavComments = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavComments;\r\n","import React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport modify from \"../../images/modify-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavProfile = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    const userId = Number(props.location.pathname.split(\"/\")[2]);\r\n\r\n    let modifyBtn;\r\n\r\n    if (auth.userId === userId) {\r\n        modifyBtn = (\r\n            <NavBtn\r\n                id=\"update-profile\"\r\n                name=\"modifier\"\r\n                icon={modify}\r\n                link={`/profile/${auth.userId}/update`}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        );\r\n    } else {\r\n        modifyBtn = \"\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBtn id=\"back\" name=\"retourner\" icon={back} link=\"/posts\" iconColor=\"icon_white\" />\r\n            {auth.userId && userId && modifyBtn}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavProfile);\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Icons\r\nimport close from \"../../images/close-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavLogin = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <>\r\n            <NavBtn icon={close} name=\"annuler\" link={`/profile/${auth.userId}`} iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavLogin;\r\n","import React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Components\r\nimport NavHome from \"./nav_home\";\r\nimport NavLogin from \"./nav_login\";\r\nimport NavSignUp from \"./nav_signup\";\r\nimport NavPost from \"./nav_posts\";\r\nimport NavMenu from \"./nav_menu\";\r\nimport NavNewPost from \"./Nav_newpost\";\r\nimport NavComments from \"./nav_comments\";\r\nimport NavProfile from \"./nav_profile\";\r\nimport NavUpdate from \"./nav_update\";\r\n\r\n// Styles\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    const id = props.location.pathname.split(\"/\")[2];\r\n\r\n    const backHandle = (e) => {\r\n        e.preventDefault();\r\n        props.history.goBack();\r\n    };\r\n\r\n    let nav;\r\n\r\n    switch (props.location.pathname) {\r\n        case \"/\":\r\n            nav = <NavHome />;\r\n            break;\r\n        case \"/login\":\r\n            nav = <NavLogin backHandle={backHandle} />;\r\n            break;\r\n        case \"/signup\":\r\n            nav = <NavSignUp backHandle={backHandle} />;\r\n            break;\r\n        case \"/posts\":\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavPost backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case \"/menu\":\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavMenu backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case \"/posts/new\":\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavNewPost backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `/posts/${id}`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavComments backHandle={backHandle} commentHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `/profile/${id}`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavProfile backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `/profile/${auth.userId}/update`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavUpdate />;\r\n            }\r\n            break;\r\n        default:\r\n            console.log(\"NAV: Something went wrong!\");\r\n    }\r\n\r\n    return (\r\n        <footer>\r\n            <div className=\"nav_btn_list\">{nav}</div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default withRouter(Nav);\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpRequest = () => {\r\n    // useState pour définir l'état de chargement et les erreurs produits pendant la requête\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeRequest = useRef([]);\r\n\r\n    // Fonction fetch avec callBack pour eviter des loops infinits\r\n    const sendRequest = useCallback(async (url, method = \"\", body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortCtrl = new AbortController();\r\n        activeRequest.current.push(httpAbortCtrl);\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal,\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            activeRequest.current = activeRequest.current.filter((reqCtrl) => reqCtrl !== httpAbortCtrl);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            // Si reponse ok, retourner les donnés et finir l'état chargement\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (err) {\r\n            // Si un erreur s'est produit, il le capture et le mets sur son useState\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    // Annule la requête\r\n    useEffect(() => {\r\n        return () => {\r\n            activeRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n        };\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Styles\r\nimport styles from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n    // Portail référencé sur l'html principal comme \"Backdrop-hook\"\r\n    return ReactDOM.createPortal(\r\n        <div className={styles.backdrop} onClick={props.onClick}></div>,\r\n        document.getElementById(\"backdrop-hook\")\r\n    );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n// Components\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\n//Styles\r\nimport styles from \"./Modal.module.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n    const content = (\r\n        <div className={`${styles.modal} ${props.className}`} style={props.style}>\r\n            {/* <header className={`${styles.modal__header} ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header> */}\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}>\r\n                <div className={`${styles.modal__content} ${props.contentClass}`}>{props.children}</div>\r\n                <footer className={`${styles.modal__footer} ${props.footerClass}`}>{props.footer}</footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={10} classNames={styles.modal}>\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./UIBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<ActionBtn \r\n    id={props.id}\r\n    form={id du formulaire} \r\n    name={nom bu bouton} \r\n    type={type de bouton}\r\n    onClick={fonction onClick}\r\n    btType={\"valid\", \"cancel\", \"warning\"}\r\n    icon={icon-name}\r\n    iconColor={couleur de l'icône}\r\n/>\r\n\r\n*/\r\n\r\nconst UIBtn = (props) => {\r\n    let icon;\r\n\r\n    if (props.icon) {\r\n        icon = <img id=\"icon\" className={`${styles.icon} ${props.iconColor}`} src={props.icon} alt=\"\" />;\r\n    } else {\r\n        icon = null;\r\n    }\r\n\r\n    let btnType;\r\n\r\n    if (props.btnType === \"valid\") {\r\n        btnType = styles.valid;\r\n    }\r\n    if (props.btnType === \"cancel\") {\r\n        btnType = styles.cancel;\r\n    }\r\n    if (props.btnType === \"warning\") {\r\n        btnType = styles.warning;\r\n    }\r\n\r\n    return (\r\n        <button\r\n            id={props.id}\r\n            className={`${styles.btn} ${btnType} ${props.buttonClass}`}\r\n            type={props.type}\r\n            form={props.form}\r\n            onClick={props.onClick}\r\n        >\r\n            <div className={styles.justify}>\r\n                <span className={styles.text}>{props.name}</span>\r\n                {icon}\r\n            </div>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default UIBtn;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport UIBtn from \"../Buttons/UIBtn/UIBtn\";\r\n\r\n// Styles\r\nimport styles from \"./ErrorModal.module.css\";\r\n\r\nconst ErrorModal = (props) => {\r\n    return (\r\n        <Modal\r\n            onCancel={props.onClear}\r\n            header=\"An Error Occurred!\"\r\n            show={!!props.error}\r\n            footer={\r\n                <UIBtn\r\n                    id=\"accept-btn\"\r\n                    name=\"Ok\"\r\n                    type=\"submit\"\r\n                    btnType=\"warning\"\r\n                    onClick={props.onClear}\r\n                    buttonClass={styles.btn}\r\n                />\r\n            }\r\n        >\r\n            <p>{props.error}</p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport \"./LoadingSpinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n    return (\r\n        <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\r\n            <div className=\"lds-dual-ring\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Static Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Icons\r\nimport person from \"../../images/person-icon.svg\";\r\nimport agenda from \"../../images/agenda-icon.svg\";\r\nimport categories from \"../../images/categories-icon.svg\";\r\nimport logout from \"../../images/logout-icon.svg\";\r\nimport posts from \"../../images/posts-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./Menu.module.css\";\r\n\r\nconst Menu = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    //Profile Hook\r\n    const [profileData, setProfileData] = useState();\r\n\r\n    //Fetch Most recent posts\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        if (auth.token && auth.userId) {\r\n            const fetchPosts = async () => {\r\n                try {\r\n                    const userData = await sendRequest(\r\n                        `${process.env.REACT_APP_API_URL}/profile/${auth.userId}`,\r\n                        \"GET\",\r\n                        null,\r\n                        {\r\n                            Authorization: \"Bearer \" + auth.token,\r\n                        }\r\n                    );\r\n                    if (mounted) {\r\n                        setProfileData(userData);\r\n                    }\r\n                } catch (err) {}\r\n            };\r\n            fetchPosts();\r\n        }\r\n\r\n        return () => (mounted = false);\r\n    }, [sendRequest, auth.token, auth.userId, setProfileData]);\r\n\r\n    const logoutHandler = (event) => {\r\n        event.preventDefault();\r\n        auth.logout();\r\n        history.push(`/`);\r\n    };\r\n\r\n    // Affichage Navlinks en desktop\r\n    let navLinks;\r\n    if (width >= 1024) {\r\n        navLinks = (\r\n            <>\r\n                <Link to=\"/posts\" className={`${styles.btn} ${styles.border}`}>\r\n                    <span className={styles.text}>Publications</span>\r\n                    <img className={`${styles.icon} icon_white`} src={posts} alt=\"\" />\r\n                </Link>\r\n                <Link to=\"/posts\" className={`${styles.btn} ${styles.border}`}>\r\n                    <span className={styles.text}>Catégories</span>\r\n                    <img className={`${styles.icon} icon_white`} src={categories} alt=\"\" />\r\n                </Link>\r\n            </>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!profileData) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <>\r\n                {!isLoading && profileData && (\r\n                    <div className={styles.cover}>\r\n                        <div className={styles.background_img}></div>\r\n                        <div className={styles.wrapper}>\r\n                            <img\r\n                                src={profileData.photo_url || GenProfile}\r\n                                className={styles.profile_photo}\r\n                                alt={`${profileData.firstName} ${profileData.lastName}`}\r\n                            />\r\n                            <div className={styles.hero_block}>\r\n                                <h2 className={styles.title}>Bienvenue {profileData.firstName} !</h2>\r\n                            </div>\r\n                        </div>\r\n                        <nav className={styles.list}>\r\n                            <Link to={`profile/${auth.userId}`} className={`${styles.btn} ${styles.border}`}>\r\n                                <span className={styles.text}>Mon profil</span>\r\n                                <img className={`${styles.icon} icon_white`} src={person} alt=\"\" />\r\n                            </Link>\r\n                            {navLinks}\r\n                            <Link to=\"/posts\" className={`${styles.btn} ${styles.border}`}>\r\n                                <span className={styles.text}>Annuaire</span>\r\n                                <img className={`${styles.icon} icon_white`} src={agenda} alt=\"\" />\r\n                            </Link>\r\n                            <button className={`${styles.btn} ${styles.logout_margin}`} onClick={logoutHandler}>\r\n                                <span className={styles.text}>Se déconnecter</span>\r\n                                <img className={`${styles.icon} icon_white`} src={logout} alt=\"\" />\r\n                            </button>\r\n                        </nav>\r\n                    </div>\r\n                )}\r\n            </>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Components\r\nimport Nav from \"../../components/Nav/Nav\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\n// Styles\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = (props) => {\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // App path\r\n    const path = props.location.pathname;\r\n\r\n    const mobileLayout = (\r\n        <>\r\n            <main className=\"home_wrapper\">{props.children}</main>\r\n            <Nav />\r\n        </>\r\n    );\r\n\r\n    const desktopLayout = (\r\n        <>\r\n            <div className=\"desktop_wrap\">\r\n                <Menu />\r\n                <main className=\"wrapper\">{props.children}</main>\r\n            </div>\r\n            <p className=\"disclaimer\">\r\n                Plan du site © Groupomania 2020. La Societé ne prend aucune responsabilité légale sur les publications\r\n                faites par ses employés.\r\n            </p>\r\n        </>\r\n    );\r\n\r\n    // Mobile Layout\r\n    if (width <= 1023) {\r\n        return mobileLayout;\r\n    }\r\n\r\n    // Desktop Layout\r\n    if (width >= 1024) {\r\n        switch (path) {\r\n            case \"/\":\r\n                return mobileLayout;\r\n            // break;\r\n            case \"/login\":\r\n                return mobileLayout;\r\n            // break;\r\n            case \"/signup\":\r\n                return mobileLayout;\r\n            // break;\r\n            default:\r\n                return desktopLayout;\r\n        }\r\n    }\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\n\r\n// Static Images\r\nimport logo from \"../../images/logo.png\";\r\n\r\n// Styles\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"background_image\">\r\n            <img src={logo} className=\"logo\" alt=\"Logo de Groupomania, entreprise de grande distribution européenne\" />\r\n            <div className=\"welcome\">\r\n                <h3 className=\"title\">Bienvenue</h3>\r\n                <p className=\"message\">sur le réseau social pour partager avec vos collègues !</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    // gestion de la action\r\n    switch (action.type) {\r\n        case \"INPUT_CHANGE\":\r\n            let formIsValid = true;\r\n            // Validation pour chaque objet html, il valide avec l'id et le changement d'état de l'objet\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            // Après, il crée une copie de l'état précédent et ajoutes le nouveau état\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid },\r\n                },\r\n                isValid: formIsValid,\r\n            };\r\n        case \"SET_DATA\":\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Composant\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    // Fonction pour établir l'état initiale des objets html et envoie les donnés à formState\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity,\r\n    });\r\n\r\n    // Fonction pour capturer les valeurs des objets html et envoie les donnés à formState\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: \"INPUT_CHANGE\",\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id,\r\n        });\r\n    }, []);\r\n\r\n    // Fonction pour reinitialiser le formState des objets html et envoie les donnés à formState\r\n    const setFormState = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: \"SET_DATA\",\r\n            inputs: inputData,\r\n            formIsValid: formValidity,\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormState];\r\n};\r\n","const REQUIRED = \"REQUIRED\";\r\nconst MINLENGTH = \"MINLENGTH\";\r\nconst MAXLENGTH = \"MAXLENGTH\";\r\nconst MIN = \"MIN\";\r\nconst MAX = \"MAX\";\r\nconst EMAIL = \"EMAIL\";\r\nconst FILE = \"FILE\";\r\nconst TEXT = \"TEXT\";\r\n\r\nexport const isRequired = () => ({ type: REQUIRED });\r\nexport const isFile = () => ({ type: FILE });\r\n\r\nexport const MinLength = (val) => ({\r\n    type: MINLENGTH,\r\n    val: val,\r\n});\r\n\r\nexport const MaxLength = (val) => ({\r\n    type: MAXLENGTH,\r\n    val: val,\r\n});\r\n\r\nexport const isMin = (val) => ({ type: MIN, val: val });\r\n\r\nexport const isMax = (val) => ({ type: MAX, val: val });\r\n\r\nexport const isText = () => ({ type: TEXT });\r\n\r\nexport const isEmail = () => ({ type: EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n\r\n    for (const validator of validators) {\r\n        if (validator.type === REQUIRED) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n\r\n        if (validator.type === MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.val;\r\n        }\r\n\r\n        if (validator.type === MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.val;\r\n        }\r\n\r\n        if (validator.type === MIN) {\r\n            isValid = isValid && +value >= validator.val;\r\n        }\r\n\r\n        if (validator.type === MAX) {\r\n            isValid = isValid && +value <= validator.val;\r\n        }\r\n\r\n        if (validator.type === TEXT) {\r\n            isValid = isValid && /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ '-]+$/i.test(value);\r\n        }\r\n\r\n        if (validator.type === EMAIL) {\r\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n        }\r\n    }\r\n\r\n    return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../utils/validators\";\r\n\r\n// Styles\r\nimport styles from \"./InputField.module.css\";\r\n\r\n// En fonction de l'etat de l'objet html (change = ecriture / touch = utilisateur change de champ)\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE\":\r\n            return {\r\n                // coppier tous les valeurs d'avant et ajoute le nouveau événement (une lettre par exemple)\r\n                ...state,\r\n                value: action.val,\r\n                // changer la validation en fonction des validateurs de l'objet html\r\n                isValid: validate(action.val, action.validators),\r\n            };\r\n        case \"TOUCH\": {\r\n            return {\r\n                ...state,\r\n                isTouched: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Component\r\nconst InputField = (props) => {\r\n    // état initielle du composant\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || \"\",\r\n        isTouched: false,\r\n        isValid: props.initialValid || false,\r\n    });\r\n\r\n    // déconstruction de props et inputState\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    // id du composant, la valeur capturée et sa validation de donnés\r\n    useEffect(() => {\r\n        onInput(id, value, isValid);\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    // Fonction pour capturer le changement de l'état du composant (écriture)\r\n    const changeHandler = (event) => {\r\n        dispatch({\r\n            type: \"CHANGE\",\r\n            val: event.target.value,\r\n            validators: props.validators,\r\n        });\r\n    };\r\n\r\n    // Fonction pour capturer le changement de l'état du composant (changer de champ)\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: \"TOUCH\",\r\n        });\r\n    };\r\n\r\n    // Validation visuelle et type d'objet html (input/textarea)\r\n    let typeOfBox;\r\n    let borderColor;\r\n\r\n    if (props.textIsWhite === \"yes\") {\r\n        typeOfBox = styles.white_box;\r\n        borderColor = styles.border_white;\r\n    } else {\r\n        typeOfBox = styles.box;\r\n        borderColor = \"\";\r\n    }\r\n\r\n    // si on souhaite un champ label\r\n    const label = props.label ? (\r\n        <label className={styles.label} htmlFor={props.id}>\r\n            {props.label}\r\n        </label>\r\n    ) : null;\r\n\r\n    // si on souhaite un icône à coté du champ\r\n    let icon;\r\n\r\n    if (props.icon && props.textIsWhite === \"yes\") {\r\n        icon = <img className={`${styles.icon} icon_white`} src={props.icon} alt={props.alt} />;\r\n    } else if (props.icon) {\r\n        icon = <img className={styles.icon} src={props.icon} alt={props.alt} />;\r\n    } else {\r\n        icon = \"\";\r\n    }\r\n\r\n    const element =\r\n        props.element === \"input\" ? (\r\n            <input\r\n                id={props.id}\r\n                className={`${typeOfBox} ${styles.input_height} `}\r\n                name={props.name}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                autoComplete={props.autocomplete}\r\n                value={inputState.value}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n            ></input>\r\n        ) : (\r\n            <textarea\r\n                id={props.id}\r\n                className={`${typeOfBox} ${styles.textarea}`}\r\n                name={props.name}\r\n                type={props.type}\r\n                rows={props.rows || 3}\r\n                placeholder={props.placeholder}\r\n                autoComplete={props.autocomplete}\r\n                value={inputState.value}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`${styles.block} ${borderColor}\r\n        ${!inputState.isValid && inputState.isTouched && styles.invalid}`}\r\n            >\r\n                {label}\r\n                <div className={styles.wrapper}>\r\n                    {element}\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n            {!inputState.isValid && inputState.isTouched && <p className={styles.input_error}>{props.errorText}</p>}\r\n        </>\r\n    );\r\n    // });\r\n};\r\n\r\nexport default InputField;\r\n","import React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { isEmail, MinLength } from \"../../utils/validators\";\r\n\r\n// Static Images\r\nimport logo from \"../../images/logo.png\";\r\n\r\n// Icons\r\nimport password from \"../../images/password-icon.svg\";\r\nimport person from \"../../images/person-icon.svg\";\r\n\r\n// Components\r\nimport InputField from \"../../components/InputField/InputField\";\r\n\r\n// Styles\r\nimport \"../Home/Home.css\";\r\n\r\nconst Login = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // Request Hook\r\n    const { error, sendRequest } = useHttpRequest();\r\n\r\n    // Input Hook\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            email: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    const loginHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const data = {\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value,\r\n            };\r\n\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/login`,\r\n                \"POST\",\r\n                JSON.stringify(data),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            );\r\n            auth.login(responseData.userId, responseData.token, responseData.account);\r\n            history.push(\"/posts\");\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"background_image\">\r\n                <img\r\n                    src={logo}\r\n                    className=\"logo\"\r\n                    alt=\"Logo de Groupomania, entreprise de grande distribution européenne\"\r\n                />\r\n                <form id=\"login-form\" className=\"input_list\" onSubmit={loginHandler}>\r\n                    <InputField\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        onInput={inputHandler}\r\n                        placeholder=\"email\"\r\n                        autocomplete=\"email\"\r\n                        icon={person}\r\n                        alt=\"email icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[isEmail(), MinLength(6)]}\r\n                        errorText=\"Votre email n'est pas correct\"\r\n                        initialValue={formState.inputs.email.value}\r\n                        initialValid={formState.inputs.email.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onInput={inputHandler}\r\n                        placeholder=\"mot de passe\"\r\n                        autocomplete=\"current-password\"\r\n                        icon={password}\r\n                        alt=\"password icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(8)]}\r\n                        errorText=\"Votre mot de passe n'est pas correct\"\r\n                        initialValue={formState.inputs.password.value}\r\n                        initialValid={formState.inputs.password.isValid}\r\n                    />\r\n                </form>\r\n                <p className=\"error_message\">{error}</p>\r\n                <Link className=\"forgot_pass_link\" to={\"/login\"}>\r\n                    mot de passe oublié ?\r\n                </Link>\r\n            </div>\r\n            <div className=\"background_blur\"></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { isEmail, MinLength, isText } from \"../../utils/validators\";\r\n\r\n// Static Images\r\nimport logo from \"../../images/logo.png\";\r\n\r\n// Icons\r\nimport lastname from \"../../images/lastname-icon.svg\";\r\nimport password from \"../../images/password-icon.svg\";\r\nimport person from \"../../images/person-icon.svg\";\r\nimport email from \"../../images/email-icon.svg\";\r\n\r\n// Components\r\nimport InputField from \"../../components/InputField/InputField\";\r\n\r\n// Styles\r\nimport \"../../containers/Home/Home.css\";\r\nimport styles from \"./Signup.module.css\";\r\n\r\nconst SignUp = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            firstName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            lastName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            email: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    // Request Hook\r\n    const { error, sendRequest } = useHttpRequest();\r\n\r\n    const signupHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const data = {\r\n                firstName: formState.inputs.firstName.value,\r\n                lastName: formState.inputs.lastName.value.toUpperCase(),\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value,\r\n            };\r\n\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/signup`,\r\n                \"POST\",\r\n                JSON.stringify(data),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            );\r\n            auth.login(responseData.userId, responseData.token, responseData.account);\r\n            history.push(\"/posts\");\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"background_image\">\r\n                <img src={logo} className=\"logo\" alt=\"Logo de Groupomania, entreprise de grand distribution européen\" />\r\n                <form id=\"signup-form\" className={styles.input_list} onSubmit={signupHandler}>\r\n                    <InputField\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        placeholder=\"prénom\"\r\n                        autocomplete=\"given-name\"\r\n                        icon={person}\r\n                        alt=\"first name icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(2), isText()]}\r\n                        errorText=\"Veuillez rentrer uniquement des lettres\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.firstName.value}\r\n                        initialValid={formState.inputs.firstName.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        placeholder=\"nom\"\r\n                        autocomplete=\"family-name\"\r\n                        icon={lastname}\r\n                        alt=\"last name icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(2), isText()]}\r\n                        errorText=\"Veuillez rentrer uniquement des lettres\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.lastName.value}\r\n                        initialValid={formState.inputs.lastName.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"email\"\r\n                        autocomplete=\"email\"\r\n                        icon={email}\r\n                        alt=\"email icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[isEmail(), MinLength(6)]}\r\n                        errorText=\"Votre email n'est pas correct\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.email.value}\r\n                        initialValid={formState.inputs.email.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"mot de passe\"\r\n                        autocomplete=\"current-password\"\r\n                        icon={password}\r\n                        alt=\"password icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(8)]}\r\n                        errorText=\"Minimum une majuscule, un chiffre et 8 lettres\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.password.value}\r\n                        initialValid={formState.inputs.password.isValid}\r\n                    />\r\n                </form>\r\n                <p className=\"error_message\">{error}</p>\r\n            </div>\r\n            <div className=\"background_blur\"></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./TabBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<TabBtn \r\n    name={texte du bouton}\r\n    onClick={fonction onClick}\r\n    icon={icon-name}\r\n/>\r\n\r\n*/\r\n\r\nconst TabBtn = (props) => {\r\n    let btn;\r\n\r\n    if (props.active === \"active\") {\r\n        btn = (\r\n            <button className={styles.btn_active} onClick={props.onClick}>\r\n                <div className={styles.container_active}>\r\n                    <span className={styles.text_active}>{props.name}</span>\r\n                    <img className={styles.icon_active} src={props.icon} alt=\"\" />\r\n                </div>\r\n            </button>\r\n        );\r\n    } else {\r\n        btn = (\r\n            <button className={styles.btn} onClick={props.onClick}>\r\n                <div className={styles.container}>\r\n                    <span className={styles.text}>{props.name}</span>\r\n                    <img className={styles.icon} src={props.icon} alt=\"\" />\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    return <>{btn}</>;\r\n};\r\n\r\nexport default TabBtn;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Icons\r\nimport like from \"../../../images/like-icon.svg\";\r\nimport dislike from \"../../../images/dislike-icon.svg\";\r\nimport comment from \"../../../images/comment-icon.svg\";\r\nimport comments from \"../../../images/comments-icon.svg\";\r\n\r\n// Styles\r\nimport styles from \"./ReactionBtn.module.css\";\r\n\r\n/*\r\nAttend ==>\r\n\r\n<ReactionBtn \r\n    btnType=\"functional, link, decor\" \r\n    link={props.link} \r\n    reaction={props.userReaction === \"like\" || \"dislike\" ? \"like\" || \"dislike\" : null} icon=\"\" text={props.text} \r\n    onCLick={props.onClick} \r\n    styling=\"Herited styles\"\r\n/>\r\n\r\n*/\r\n\r\nconst ReactionBtn = (props) => {\r\n    // Couleur du bouton like/dislike en fonction de la reaction de l'utilisateur\r\n    let reactionColor = \"\";\r\n\r\n    switch (props.reaction) {\r\n        case \"like\":\r\n            reactionColor = \"icon_green\";\r\n            break;\r\n        case \"dislike\":\r\n            reactionColor = \"icon_red\";\r\n            break;\r\n        case null:\r\n            reactionColor = \"\";\r\n            break;\r\n        default:\r\n            console.log(\"Something went wrong with reactionColor in ReactionBtn Component\");\r\n    }\r\n\r\n    // Type d'icône à montrer\r\n    let icon;\r\n    switch (props.icon) {\r\n        case \"like\":\r\n            icon = like;\r\n            break;\r\n        case \"dislike\":\r\n            icon = dislike;\r\n            break;\r\n        case \"comment\":\r\n            icon = comment;\r\n            break;\r\n        case \"comments\":\r\n            icon = comments;\r\n            break;\r\n        default:\r\n            console.log(\"Something went wrong with icon in ReactionBtn Component\");\r\n    }\r\n\r\n    // Type de bouton à montrer\r\n    let btn;\r\n    switch (props.btnType) {\r\n        case \"functional\":\r\n            btn = (\r\n                <button\r\n                    name={props.name}\r\n                    className={`${styles.reaction_btn} ${props.styling}`}\r\n                    onClick={props.onReaction}\r\n                >\r\n                    <img className={`${styles.icon} ${reactionColor}`} src={icon} alt=\"\" />\r\n                    <span>{props.text}</span>\r\n                </button>\r\n            );\r\n            break;\r\n        case \"link\":\r\n            btn = (\r\n                <Link to={props.link} className={`${styles.reaction_btn} ${props.styling}`}>\r\n                    <img className={`${styles.icon} ${reactionColor}`} src={icon} alt=\"\" />\r\n                    <span>{props.text}</span>\r\n                </Link>\r\n            );\r\n            break;\r\n        case \"decor\":\r\n            btn = (\r\n                <div className={`${styles.reaction_btn} ${props.styling}`}>\r\n                    <img className={`${styles.icon} ${reactionColor}`} src={icon} alt=\"\" />\r\n                    <span>{props.text}</span>\r\n                </div>\r\n            );\r\n            break;\r\n        default:\r\n            console.log(\"Something went wrong with btn in ReactionBtn Component\");\r\n    }\r\n\r\n    return <>{btn}</>;\r\n};\r\n\r\nexport default ReactionBtn;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Static Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Icons\r\nimport DeleteX from \"../../images/x-icon.svg\";\r\n\r\n// Styles\r\nimport styles from \"./UserHeader.module.css\";\r\nconst UserHeader = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Format de la date de la publication en sec, min, heurs, jours et années\r\n    const postDate = new Date(props.date);\r\n    const today = new Date();\r\n    const diffTime = Math.abs(today - postDate);\r\n\r\n    let newPostDate;\r\n\r\n    if (diffTime <= 6000) {\r\n        const formatDate = Math.ceil(diffTime / 1000) + \" s\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 60000) {\r\n        const formatDate = Math.ceil(diffTime / (1000 * 60)) + \" m\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 3600000) {\r\n        const formatDate = Math.ceil(diffTime / (1000 * 60 * 60)) + \" h\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 216000000) {\r\n        const formatDate = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + \" j\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 189216000000) {\r\n        const formatDate = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 365)) + \" a\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    // Changer l'affichage selon la page posts ou comments\r\n    let category;\r\n\r\n    if (props.category) {\r\n        category = (\r\n            <>\r\n                <span className={styles.text_division}>|</span>\r\n                <span>{props.category}</span>\r\n            </>\r\n        );\r\n    } else {\r\n        category = \"\";\r\n    }\r\n\r\n    // verification admin pour montrer le bouton de supprimer post/comment\r\n    let deleteBtn;\r\n\r\n    if (auth.userId === props.UserId || auth.account === \"admin\") {\r\n        deleteBtn = (\r\n            <button className={styles.delete_btn} onClick={props.onDelete}>\r\n                <img className={styles.delete_icon} src={DeleteX} alt=\"delete icon\" />\r\n            </button>\r\n        );\r\n    } else {\r\n        deleteBtn = \"\";\r\n    }\r\n\r\n    return (\r\n        <header className={styles.block}>\r\n            <Link to={`/profile/${props.UserId}`}>\r\n                <img\r\n                    className={styles.photo}\r\n                    src={props.photo_url || GenProfile}\r\n                    alt={`${props.firstName} ${props.lastName}`}\r\n                />\r\n                {props.firstName} {props.lastName}\r\n            </Link>\r\n            <p className={styles.text}>\r\n                {category}\r\n                <span className={styles.text_division}>•</span>\r\n                <span>{newPostDate}</span>\r\n            </p>\r\n            {deleteBtn}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default UserHeader;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Components\r\nimport ReactionBtn from \"../../components/Buttons/ReactionBtn/ReactionBtn\";\r\nimport UserHeader from \"../UserHeader/UserHeader\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./Post.module.css\";\r\n\r\n// manejar el useState de manera local para los likes\r\n\r\nconst Post = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Request Hook\r\n    const { isLoading, sendRequest } = useHttpRequest();\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // App Location\r\n    const path = props.location.pathname;\r\n    const postId = props.location.pathname.split(\"/\")[2];\r\n\r\n    // User Likes\r\n    const [likesCounter, setLikesCounter] = useState(props.likes);\r\n\r\n    // User Dislikes\r\n    const [dislikesCounter, setDislikesCounter] = useState(props.dislikes);\r\n\r\n    // User's reaction to post\r\n    const [userReaction, setUserReaction] = useState(props.userReaction);\r\n\r\n    // Reaction status\r\n    const [hasReacted, setHasReacted] = useState(props.userReaction === null ? false : true);\r\n\r\n    console.log(\r\n        \"PostID =>\",\r\n        props.id,\r\n        \"User React. =>\",\r\n        userReaction,\r\n        \"hasReacted? =>\",\r\n        hasReacted,\r\n        \"Likes? =>\",\r\n        likesCounter,\r\n        \"Dislikes? =>\",\r\n        dislikesCounter\r\n    );\r\n\r\n    // Reaction Handler\r\n    const userReactionHandler = (event) => {\r\n        event.preventDefault();\r\n        let reaction;\r\n\r\n        switch (userReaction) {\r\n            case null:\r\n                if (event.currentTarget.name === \"like\") {\r\n                    setLikesCounter(likesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                } else {\r\n                    setDislikesCounter(dislikesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n                setUserReaction(event.currentTarget.name);\r\n                setHasReacted(true);\r\n\r\n                break;\r\n\r\n            case \"null\":\r\n                if (event.currentTarget.name === \"like\") {\r\n                    setLikesCounter(likesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                } else {\r\n                    setDislikesCounter(dislikesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n                setUserReaction(event.currentTarget.name);\r\n\r\n                break;\r\n\r\n            case \"like\":\r\n                if (event.currentTarget.name === \"like\") {\r\n                    setLikesCounter(likesCounter - 1);\r\n                    setUserReaction(\"null\");\r\n                    reaction = \"null\";\r\n                } else {\r\n                    setLikesCounter(likesCounter - 1);\r\n                    setDislikesCounter(dislikesCounter + 1);\r\n                    setUserReaction(event.currentTarget.name);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n\r\n                break;\r\n\r\n            case \"dislike\":\r\n                if (event.currentTarget.name === \"dislike\") {\r\n                    setDislikesCounter(dislikesCounter - 1);\r\n                    setUserReaction(\"null\");\r\n                    reaction = \"null\";\r\n                } else {\r\n                    setLikesCounter(likesCounter + 1);\r\n                    setDislikesCounter(dislikesCounter - 1);\r\n                    setUserReaction(event.currentTarget.name);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                console.log(\"an error was produced in userReactionHandler function on post component\");\r\n                break;\r\n        }\r\n\r\n        fetch(`${process.env.REACT_APP_API_URL}/posts/reaction`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\", Authorization: \"Bearer \" + auth.token },\r\n            body: JSON.stringify({\r\n                PostId: props.id,\r\n                reaction: reaction,\r\n                reacted: hasReacted,\r\n            }),\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    console.log(\"res.ok\");\r\n                    return;\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    // Delete Post\r\n    const DeletePostHandler = async () => {\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/posts/${props.id}`,\r\n                \"DELETE\",\r\n                JSON.stringify({ image_url: props.image_url }),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n            if (path === `/posts/${postId}`) {\r\n                history.push(`/posts`);\r\n            } else {\r\n                props.onDelete(props.id);\r\n            }\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Type de visualisation sur Posts et Comment Post\r\n    let commentBlock;\r\n\r\n    if (props.location.pathname === \"/posts\") {\r\n        commentBlock = (\r\n            <>\r\n                <ReactionBtn btnType=\"decor\" icon=\"comments\" text={props.comments} styling=\"\" reaction={null} />\r\n                <ReactionBtn\r\n                    btnType=\"link\"\r\n                    link={props.post_link}\r\n                    reaction={null}\r\n                    icon=\"comment\"\r\n                    text=\"commenter\"\r\n                    styling={styles.comment_btn}\r\n                />\r\n            </>\r\n        );\r\n    } else {\r\n        commentBlock = (\r\n            <ReactionBtn\r\n                btnType=\"decor\"\r\n                icon=\"comments\"\r\n                text={props.comments}\r\n                styling={styles.push_right}\r\n                reaction={null}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <article id={props.id}>\r\n            {isLoading && (\r\n                <div className=\"spinner\">\r\n                    <Spinner asOverlay />\r\n                </div>\r\n            )}\r\n            <UserHeader\r\n                UserId={props.UserId}\r\n                photo_url={props.photo_url}\r\n                firstName={props.firstName}\r\n                lastName={props.lastName}\r\n                date={props.date}\r\n                category={props.category}\r\n                onDelete={DeletePostHandler}\r\n            />\r\n            <section className={styles.block}>\r\n                <h3 className={styles.title}>{props.title}</h3>\r\n                <img className={styles.photo} src={props.image_url} alt=\"post\" />\r\n                <footer className={styles.reactions}>\r\n                    <ReactionBtn\r\n                        btnType=\"functional\"\r\n                        name=\"like\"\r\n                        onReaction={userReactionHandler}\r\n                        reaction={userReaction === \"like\" ? \"like\" : null}\r\n                        icon=\"like\"\r\n                        text={likesCounter}\r\n                        styling=\"\"\r\n                    />\r\n                    <ReactionBtn\r\n                        btnType=\"functional\"\r\n                        name=\"dislike\"\r\n                        onReaction={userReactionHandler}\r\n                        reaction={userReaction === \"dislike\" ? \"dislike\" : null}\r\n                        icon=\"dislike\"\r\n                        text={dislikesCounter}\r\n                        styling=\"\"\r\n                    />\r\n                    {commentBlock}\r\n                </footer>\r\n            </section>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default withRouter(Post);\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Post from \"../../components/Post/Post\";\r\n\r\n// Styles\r\nimport styles from \"./PostList.module.css\";\r\n\r\nconst PostList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <h2>No Posts Created</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.items.map((post, key) => {\r\n                return (\r\n                    <Post\r\n                        key={key}\r\n                        id={post.PostId}\r\n                        UserId={post.UserId}\r\n                        photo_url={post.photo_url}\r\n                        firstName={post.firstName}\r\n                        lastName={post.lastName}\r\n                        date={post.post_date}\r\n                        category={post.category}\r\n                        title={post.title}\r\n                        image_url={post.image_url}\r\n                        likes={post.likes}\r\n                        dislikes={post.dislikes}\r\n                        comments={post.comments}\r\n                        userReaction={post.userReaction}\r\n                        post_link={`/posts/${post.PostId}`}\r\n                        onDelete={props.onDeletePost}\r\n                    />\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Icons\r\nimport clockIcon from \"../../images/clock-icon.svg\";\r\nimport coffeeIcon from \"../../images/coffee-icon.svg\";\r\nimport postIcon from \"../../images/post-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport TabBtn from \"../../components/Buttons/TabBtn/TabBtn\";\r\nimport PostList from \"../../components/PostList/PostList\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./Posts.module.css\";\r\n\r\nconst Posts = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    //Posts State\r\n    const [posts, setPosts] = useState();\r\n\r\n    // Tab Btn State\r\n    const [activeBtn, setActiveBtn] = useState({\r\n        mostRecents: \"active\",\r\n        mostLiked: \"\",\r\n    });\r\n\r\n    // Fetch Initial\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const initData = await sendRequest(`${process.env.REACT_APP_API_URL}/posts`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n                setPosts(initData);\r\n            } catch (err) {}\r\n        };\r\n        fetchPosts();\r\n    }, [sendRequest, auth.token]);\r\n\r\n    // Fetch Most recent posts\r\n    const fetchMostRecent = async () => {\r\n        try {\r\n            const postsData = await sendRequest(`${process.env.REACT_APP_API_URL}/posts`, \"GET\", null, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            setPosts(postsData);\r\n            setActiveBtn({\r\n                mostRecents: \"active\",\r\n                mostLiked: \"\",\r\n            });\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Fetch Most liked posts\r\n    const fetchMostLiked = async () => {\r\n        try {\r\n            const mostLikedData = await sendRequest(`${process.env.REACT_APP_API_URL}/posts/most-liked`, \"GET\", null, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            setPosts(mostLikedData);\r\n            setActiveBtn({\r\n                mostRecents: \"\",\r\n                mostLiked: \"active\",\r\n            });\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Delete POST Handler\r\n    const deletePostHandler = (deletedPostId) => {\r\n        setPosts((prevPosts) => prevPosts.filter((post) => post.PostId !== deletedPostId));\r\n    };\r\n\r\n    // Affichage menu post en desktop\r\n    let newPost;\r\n\r\n    if (width >= 1024) {\r\n        newPost = (\r\n            <Link to={`posts/new`} className={styles.btn}>\r\n                <span className={styles.text}>NOUVEAU POST</span>\r\n                <img className={styles.icon} src={postIcon} alt=\"\" />\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <nav className={styles.header}>\r\n                <TabBtn name=\"À LA UNE\" icon={clockIcon} active={activeBtn.mostRecents} onClick={fetchMostRecent} />\r\n                <TabBtn name=\"LES PLUS AIMÉS\" icon={coffeeIcon} active={activeBtn.mostLiked} onClick={fetchMostLiked} />\r\n                {newPost}\r\n            </nav>\r\n            <div className=\"container\">\r\n                {isLoading && (\r\n                    <div className=\"spinner\">\r\n                        <Spinner />\r\n                    </div>\r\n                )}\r\n                {!isLoading && activeBtn && posts && <PostList items={posts} onDeletePost={deletePostHandler} />}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n\r\n// Static Images\r\nimport logotype from \"../../images/logotype.svg\";\r\n\r\n// Styles\r\nimport styles from \"./Counter.module.css\";\r\n\r\nconst Counter = (props) => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.counter}>\r\n                <h5 className={styles.title}>Publications</h5>\r\n                <span className={styles.count}>{props.postsCount}</span>\r\n                <p className={styles.text}>par vous</p>\r\n            </div>\r\n\r\n            <img className={styles.logotype} src={logotype} alt=\"Logo de Groupomania\" />\r\n\r\n            <div className={styles.counter}>\r\n                <h5 className={styles.title}>Aimées par</h5>\r\n                <span className={styles.count}>{props.likesCount}</span>\r\n                <p className={styles.text}>vos collègues</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Static Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Icons\r\nimport LinkedinIcon from \"../../images/linkedin-icon.svg\";\r\nimport LinkedinGreyIcon from \"../../images/linkedin-grey-icon.svg\";\r\nimport modify from \"../../images/modify-icon.svg\";\r\nimport back from \"../../images/back-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\nimport Counter from \"../../components/Counter/Counter\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./UserProfile.module.css\";\r\n\r\nconst UserProfile = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    //Profile Hook\r\n    const [profileData, setProfileData] = useState();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // Id de l'utilisateur à afficher\r\n    const userId = Number(useParams().id);\r\n\r\n    // Fetch l'utilisateur à afficher\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const userData = await sendRequest(`${process.env.REACT_APP_API_URL}/profile/${userId}`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n\r\n                setProfileData(userData);\r\n            } catch (err) {}\r\n        };\r\n        fetchUser();\r\n    }, [sendRequest, auth.token, userId]);\r\n\r\n    let btnStyle = styles.btnStyle;\r\n    let iconStyle = `${styles.iconStyle} icon_red`;\r\n    let desktopNav;\r\n\r\n    // Affichage Nav Desktop\r\n    if (width >= 1024) {\r\n        desktopNav = (\r\n            <nav className={styles.nav}>\r\n                <NavBtn\r\n                    id=\"back\"\r\n                    name=\"retourner\"\r\n                    icon={back}\r\n                    link=\"/posts\"\r\n                    btnStyle={btnStyle}\r\n                    iconColor={iconStyle}\r\n                />\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    // Validation Affichage Nav Desktop si l'utilisateur c'est le même qui s'affiche\r\n    if (width >= 1024) {\r\n        if (auth.userId === userId) {\r\n            desktopNav = (\r\n                <nav className={styles.nav}>\r\n                    <NavBtn\r\n                        id=\"back\"\r\n                        name=\"retourner\"\r\n                        icon={back}\r\n                        link=\"/posts\"\r\n                        btnStyle={btnStyle}\r\n                        iconColor={iconStyle}\r\n                    />\r\n                    <NavBtn\r\n                        id=\"update-profile\"\r\n                        name=\"Modifier\"\r\n                        icon={modify}\r\n                        link={`/profile/${auth.userId}/update`}\r\n                        btnStyle={btnStyle}\r\n                        iconColor={iconStyle}\r\n                    />\r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!profileData) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <div className={`container ${styles.class_mod}`}>\r\n                {!isLoading && profileData && (\r\n                    <>\r\n                        <div className={styles.background_img}></div>\r\n                        <div className={styles.wrapper}>\r\n                            <img\r\n                                src={profileData.photo_url || GenProfile}\r\n                                className={styles.profile_photo}\r\n                                alt={`${profileData.firstName} ${profileData.lastName}, employé chez groupomania.`}\r\n                            />\r\n                            <div className={styles.hero_block}>\r\n                                <h2 className={styles.title}>\r\n                                    {profileData.firstName} {profileData.lastName}\r\n                                </h2>\r\n                                {profileData.linkedin_url ? (\r\n                                    <a href={profileData.linkedin_url} rel=\"noopener\">\r\n                                        <img\r\n                                            className={styles.Linkedin_icon}\r\n                                            src={LinkedinIcon}\r\n                                            alt=\"Logo du reseaux social linkedin\"\r\n                                        />\r\n                                    </a>\r\n                                ) : (\r\n                                    <img\r\n                                        className={styles.Linkedin_icon}\r\n                                        src={LinkedinGreyIcon}\r\n                                        alt=\"Logo du reseaux social linkedin\"\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <p className={styles.department}>{profileData.department}</p>\r\n                            <p className={styles.role}>{profileData.role}</p>\r\n                            <a className={styles.email} href={`mailto:${profileData.email}`}>\r\n                                {profileData.email}\r\n                            </a>\r\n                            <Counter\r\n                                likesCount={profileData.likesCount || 0}\r\n                                postsCount={profileData.postsCount || 0}\r\n                            />\r\n                            {desktopNav}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport ok from \"../../images/ok-icon.svg\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport UIBtn from \"../Buttons/UIBtn/UIBtn\";\r\n\r\n// Styles\r\nimport styles from \"./ConfirmModal.module.css\";\r\n\r\nconst ConfirmModal = (props) => {\r\n    return (\r\n        <Modal\r\n            show={props.show}\r\n            onCancel={props.onCancel}\r\n            // header=\"titre du modal\"\r\n            footer={\r\n                <UIBtn\r\n                    id=\"accept-btn\"\r\n                    name=\"Ok\"\r\n                    type=\"submit\"\r\n                    btnType=\"warning\"\r\n                    onClick={props.onCancel}\r\n                    buttonClass={styles.btn}\r\n                />\r\n            }\r\n        >\r\n            <img className={`${styles.okIcon} icon_green`} src={ok} alt=\"\" />\r\n            <p>{props.message}</p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Icons\r\nimport Image from \"../../images/image-icon.svg\";\r\n\r\n// Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Styles\r\nimport styles from \"./ImageUpload.module.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n    // Use state de l'image\r\n    const [file, setFile] = useState();\r\n\r\n    // Use state de la previsualisation de l'image\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n\r\n    // Use state de la validation\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    // Localisation actuelle de l'app\r\n    const path = props.location.pathname;\r\n\r\n    useEffect(() => {\r\n        // verification s'il y a une image ou pas dans le useState\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        // Accéder à la previsualisation de l'image du navigateur et le transferer au useState\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    // Fontion qui prend l'image\r\n    const pickedImageHandler = (event) => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n\r\n        // S'il y a une image dans l'événement\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    // Construction pour la page new post\r\n    if (path === \"/posts/new\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"upload-button\" className={styles.image_container}>\r\n                    {previewUrl ? (\r\n                        <>\r\n                            <img\r\n                                className={styles.preview_post}\r\n                                src={previewUrl}\r\n                                alt=\"Prévisualisation de la publication\"\r\n                            />\r\n                            <div className={styles.red_banner_post}>\r\n                                <span className={styles.banner_text_post}>changer l'image</span>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <div className={styles.icon_block}>\r\n                            <img className={styles.icon} src={Image} alt=\"\" />\r\n                            <span className={styles.text}>Veuillez choisir une image en cliquant ici</span>\r\n                        </div>\r\n                    )}\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\".jpeg,.jpg,.gif\"\r\n                    id=\"upload-button\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={pickedImageHandler}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    // Construction pour la page Update Profile\r\n    return (\r\n        <>\r\n            <label htmlFor=\"upload-button\" className={styles.photo_container}>\r\n                {previewUrl ? (\r\n                    <>\r\n                        <img className={styles.preview_img} src={previewUrl} alt=\"Prévisualisation du profil\" />\r\n\r\n                        <div className={styles.red_banner}>\r\n                            <span className={styles.banner_text}>changer</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div>\r\n                        <img className={styles.profile_photo} src={props.photo_url || GenProfile} alt=\"\" />\r\n                        <div className={styles.red_banner}>\r\n                            <span className={styles.banner_text}>changer</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".jpeg,.jpg\"\r\n                id=\"upload-button\"\r\n                style={{ display: \"none\" }}\r\n                onChange={pickedImageHandler}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ImageUpload);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { isEmail, MinLength, MaxLength, isText } from \"../../utils/validators\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Icons\r\nimport password from \"../../images/password-icon.svg\";\r\nimport back from \"../../images/back-icon.svg\";\r\nimport deleteIcon from \"../../images/delete-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport ConfirmModal from \"../../components/ConfirmModal/ConfirmModal\";\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\nimport UIBtn from \"../../components/Buttons/UIBtn/UIBtn\";\r\nimport ImageUpload from \"../../components/ImageUpload/ImageUpload\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./UpdateProfile.module.css\";\r\n\r\nconst UpdateProfile = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    // Profile useState\r\n    const [userDataState, setUserDataState] = useState();\r\n\r\n    // Delete message useState\r\n    const [showInfo, setShowInfo] = useState(false);\r\n\r\n    // Show confirm modal useState\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    // Form useState\r\n    const [formState, inputHandler, setFormState] = useForm(\r\n        {\r\n            image: {\r\n                value: null,\r\n                isValid: false,\r\n            },\r\n            firstName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            lastName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            email: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            department: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            role: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            linkedin_url: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    // Fetch User et initialiser le formState\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const userData = await sendRequest(\r\n                    `${process.env.REACT_APP_API_URL}/profile/${auth.userId}`,\r\n                    \"GET\",\r\n                    null,\r\n                    {\r\n                        Authorization: \"Bearer \" + auth.token,\r\n                    }\r\n                );\r\n                setUserDataState(userData);\r\n                setFormState(\r\n                    {\r\n                        image: {\r\n                            value: userData.photo_url,\r\n                            isValid: false,\r\n                        },\r\n                        firstName: {\r\n                            value: userData.firstName,\r\n                            isValid: true,\r\n                        },\r\n                        lastName: {\r\n                            value: userData.lastName,\r\n                            isValid: true,\r\n                        },\r\n                        department: {\r\n                            value: userData.department,\r\n                            isValid: true,\r\n                        },\r\n                        role: {\r\n                            value: userData.role,\r\n                            isValid: true,\r\n                        },\r\n                        email: {\r\n                            value: userData.email,\r\n                            isValid: true,\r\n                        },\r\n                        linkedin_url: {\r\n                            value: userData.linkedin_url,\r\n                            isValid: true,\r\n                        },\r\n                    },\r\n                    true\r\n                );\r\n            } catch (err) {}\r\n        };\r\n        fetchUser();\r\n    }, [sendRequest, auth.userId, auth.token, setFormState]);\r\n\r\n    // Mettre à jour les donnés de l'utilisateur\r\n    const updateProfileHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        formData.append(\"firstName\", formState.inputs.firstName.value);\r\n        formData.append(\"lastName\", formState.inputs.lastName.value);\r\n        formData.append(\"department\", formState.inputs.department.value);\r\n        formData.append(\"role\", formState.inputs.role.value);\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"linkedin_url\", formState.inputs.linkedin_url.value);\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/profile/update`, \"PATCH\", formData, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n\r\n            openConfirmModalHandler();\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Mettre à jour le mot de passe de l'utilisateur\r\n    const updatePasswordHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/profile/update`,\r\n                \"PUT\",\r\n                JSON.stringify({\r\n                    password: formState.inputs.password.value,\r\n                }),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n\r\n            // écran de confirmation\r\n            openConfirmModalHandler();\r\n        } catch (err) {}\r\n    };\r\n\r\n    //  Intention de Supprimer utilisateur\r\n    const showDeleteMessage = (event) => {\r\n        event.preventDefault();\r\n        if (showInfo === false) {\r\n            setShowInfo(true);\r\n        } else {\r\n            setShowInfo(false);\r\n        }\r\n    };\r\n\r\n    //  Supprimer utilisateur\r\n    const deleteUserHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/profile/${auth.userId}`, \"DELETE\", null, {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            auth.logout();\r\n            history.push(`/`);\r\n        } catch (err) {}\r\n    };\r\n\r\n    //  Fonctions écran de confirmation\r\n    const openConfirmModalHandler = () => {\r\n        setShowConfirmModal(true);\r\n    };\r\n\r\n    const closeConfirmModalHandler = () => {\r\n        setShowConfirmModal(false);\r\n        setTimeout(() => {\r\n            history.push(`/profile/${auth.userId}`);\r\n        }, 300);\r\n    };\r\n\r\n    //  Affichage Nav desktop\r\n    let desktopNav;\r\n\r\n    let btnStyle = styles.btnStyle;\r\n    let iconStyle = `${styles.iconStyle} icon_red`;\r\n\r\n    if (width >= 1024) {\r\n        desktopNav = (\r\n            <NavBtn\r\n                id=\"back\"\r\n                name=\"Retourner\"\r\n                icon={back}\r\n                link={`/profile/${auth.userId}`}\r\n                btnStyle={btnStyle}\r\n                iconColor={iconStyle}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!userDataState) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <ConfirmModal\r\n                show={showConfirmModal}\r\n                message=\"Votre profil a été bien mis a jour !\"\r\n                onCancel={closeConfirmModalHandler}\r\n            />\r\n            <div className={`container ${styles.class_mod}`}>\r\n                {!isLoading && userDataState && (\r\n                    <div className={styles.wrapper}>\r\n                        <div className={styles.background_img}></div>\r\n                        <ImageUpload\r\n                            center\r\n                            id=\"image\"\r\n                            onInput={inputHandler}\r\n                            errorText=\"Choisissez une image\"\r\n                            photo_url={userDataState.photo_url}\r\n                        />\r\n                        <h4 className={styles.title}>Vos informations personnelles</h4>\r\n                        {desktopNav}\r\n                        <form id=\"update-form\" className={styles.update_list} onSubmit={updateProfileHandler}>\r\n                            <InputField\r\n                                id=\"firstName\"\r\n                                label=\"Prénom :\"\r\n                                name=\"firstName\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre prénom\"\r\n                                autocomplete=\"given-name\"\r\n                                maxLength=\"45\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(2), MaxLength(45), isText()]}\r\n                                errorText=\"Veuillez rentrer votre prénom\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.firstName}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"lastName\"\r\n                                label=\"Nom :\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre nom\"\r\n                                autocomplete=\"family-name\"\r\n                                maxLength=\"45\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(2), MaxLength(45), isText()]}\r\n                                errorText=\"Veuillez rentrer votre nom de famille\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.lastName}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"email\"\r\n                                label=\"E-mail :\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Votre e-mail\"\r\n                                autocomplete=\"email\"\r\n                                maxLength=\"100\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[isEmail(), MinLength(6), MaxLength(100)]}\r\n                                errorText=\"Votre email n'est pas correct\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.email}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"department\"\r\n                                label=\"Département :\"\r\n                                name=\"department\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre département\"\r\n                                maxLength=\"65\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MaxLength(65), isText()]}\r\n                                errorText=\"Uniquement des lettres\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.department}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"role\"\r\n                                label=\"Description du poste :\"\r\n                                name=\"role\"\r\n                                type=\"text\"\r\n                                placeholder=\"Description du poste\"\r\n                                maxLength=\"65\"\r\n                                element=\"textarea\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MaxLength(65), isText()]}\r\n                                errorText=\"Uniquement des lettres\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.role}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"linkedin_url\"\r\n                                label=\"Linkedin (facultatif) :\"\r\n                                name=\"linkedin\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre adresse Linkedin\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[]}\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.linkedin_url}\r\n                                initialValid={true}\r\n                            />\r\n                        </form>\r\n                        <UIBtn\r\n                            id=\"update-profile-btn\"\r\n                            form=\"update-form\"\r\n                            name=\"Mettre à jour mon profil\"\r\n                            type=\"submit\"\r\n                            btnType=\"valid\"\r\n                        />\r\n                        <h4 className={styles.title}>Changer mon mot de passe</h4>\r\n                        <form id=\"update-password-form\" className={styles.update_list} onSubmit={updatePasswordHandler}>\r\n                            <InputField\r\n                                id=\"password\"\r\n                                label=\"Mot de passe :\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Votre nouveau mot de passe\"\r\n                                icon={password}\r\n                                alt=\"password icon\"\r\n                                maxLength=\"50\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(8), MaxLength(50)]}\r\n                                errorText=\"Minimum une majuscule, un chiffre et 8 lettres\"\r\n                                onInput={inputHandler}\r\n                                initialValue={formState.inputs.password.value}\r\n                                initialValid={formState.inputs.password.isValid}\r\n                            />\r\n                        </form>\r\n                        <UIBtn\r\n                            id=\"update-password-btn\"\r\n                            form=\"update-password-form\"\r\n                            name=\"Changer mon mot de passe\"\r\n                            type=\"submit\"\r\n                            btnType=\"valid\"\r\n                        />\r\n                        <h4 className={styles.title}>Supprimer mon compte</h4>\r\n                        <UIBtn\r\n                            id=\"delete-profile-btn\"\r\n                            icon={deleteIcon}\r\n                            name=\"Supprimer\"\r\n                            onClick={showDeleteMessage}\r\n                            btnType=\"warning\"\r\n                            iconColor=\"icon_white\"\r\n                        />\r\n                        <div style={{ display: showInfo === true ? \"block\" : \"none\" }}>\r\n                            <p className={styles.role}>\r\n                                Vous êtes sur le point de supprimer votre compte. Toutes les informations liées à ce\r\n                                compte seront supprimées.\r\n                            </p>\r\n                            <h5 className={styles.title}>Êtes-vous sûr(e) de vouloir supprimer votre compte ?</h5>\r\n                            <div className={styles.btn_block}>\r\n                                <UIBtn\r\n                                    id=\"accept-btn\"\r\n                                    name=\"Oui\"\r\n                                    type=\"submit\"\r\n                                    onClick={deleteUserHandler}\r\n                                    btnType=\"warning\"\r\n                                />\r\n                                <UIBtn id=\"cancel-btn\" name=\"Annuler\" onClick={showDeleteMessage} btnType=\"cancel\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\n\r\n// Components\r\nimport UserHeader from \"../UserHeader/UserHeader\";\r\n\r\n// Styles\r\nimport styles from \"./Comment.module.css\";\r\n\r\nconst Comment = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Request Hook\r\n    const { sendRequest } = useHttpRequest();\r\n\r\n    //Delete Comment\r\n    const DeleteCommentHandler = async () => {\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/posts/comment/${props.id}`, \"DELETE\", null, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            props.onDeleteComment(props.id);\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <UserHeader\r\n                UserId={props.UserId}\r\n                photo_url={props.photo_url}\r\n                firstName={props.firstName}\r\n                lastName={props.lastName}\r\n                date={props.date}\r\n                onDelete={DeleteCommentHandler}\r\n            />\r\n            <div className={styles.block}>\r\n                <p className={styles.text}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { MinLength, MaxLength } from \"../../utils/validators\";\r\n\r\n//Icons\r\nimport send from \"../../images/send-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport Post from \"../../components/Post/Post\";\r\nimport Comment from \"../../components/Comment/Comment\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./CommentPost.module.css\";\r\n\r\nconst CommentPost = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Post ID\r\n    const postId = useParams().id;\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    //Posts Hook\r\n    const [post, setPost] = useState();\r\n\r\n    //Comments Hook\r\n    const [comments, setComments] = useState();\r\n\r\n    // Form useState\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            comment: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    // Fetch Post\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const post = await sendRequest(`${process.env.REACT_APP_API_URL}/posts/${postId}`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n                setPost(post[0]);\r\n                setComments(post[1].comments_list);\r\n            } catch (err) {}\r\n        };\r\n        fetchPost();\r\n    }, [sendRequest, setPost, auth.token, postId, setComments]);\r\n\r\n    // POST comment Handler\r\n    const postCommentHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const newCommentData = await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/posts/comment`,\r\n                \"POST\",\r\n                JSON.stringify({\r\n                    postId: post.PostId,\r\n                    message: formState.inputs.comment.value,\r\n                }),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n            console.log(\"res =>\", newCommentData);\r\n            setComments((prevComments) => [...prevComments, newCommentData]);\r\n            inputHandler(\"comment\", \"\", false);\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Delete POST Handler\r\n    const deletePostHandler = (deletedPostId) => {\r\n        setPost((prevPosts) => prevPosts.filter((post) => post.PostId !== deletedPostId));\r\n    };\r\n\r\n    // Delete COMMENT Handler\r\n    const deleteCommentHandler = (deletedCommentId) => {\r\n        setComments((prevComments) => prevComments.filter((comment) => comment.id !== deletedCommentId));\r\n    };\r\n\r\n    console.log(\"comments =>\", comments);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!post) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <div className=\"container\">\r\n                {!isLoading && post && comments && (\r\n                    <div className={styles.wrapper}>\r\n                        <Post\r\n                            id={post.PostId}\r\n                            UserId={post.UserId}\r\n                            photo_url={post.photo_url}\r\n                            firstName={post.firstName}\r\n                            lastName={post.lastName}\r\n                            date={post.post_date}\r\n                            category={post.category}\r\n                            title={post.title}\r\n                            image_url={post.image_url}\r\n                            likes={post.likes}\r\n                            dislikes={post.dislikes}\r\n                            comments={post.comments}\r\n                            userReaction={post.userReaction}\r\n                            onDelete={deletePostHandler}\r\n                        />\r\n                        <section>\r\n                            {comments.map((comment, index) => {\r\n                                return (\r\n                                    <Comment\r\n                                        key={index}\r\n                                        id={comment.id}\r\n                                        UserId={comment.UserId}\r\n                                        photo_url={comment.photo_url}\r\n                                        firstName={comment.firstName}\r\n                                        lastName={comment.lastName}\r\n                                        date={comment.comment_date}\r\n                                        message={comment.message}\r\n                                        onDeleteComment={deleteCommentHandler}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </section>\r\n                        <div className={styles.comment_wrap}>\r\n                            <form className={styles.comment_form} id=\"comment-form\" onSubmit={postCommentHandler}>\r\n                                <InputField\r\n                                    id=\"comment\"\r\n                                    className={styles.box}\r\n                                    name=\"comment\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Écrivez un commentaire\"\r\n                                    maxLength=\"65\"\r\n                                    element=\"textarea\"\r\n                                    hasLabel=\"yes\"\r\n                                    textIsWhite=\"no\"\r\n                                    validators={[MinLength(2), MaxLength(65)]}\r\n                                    errorText=\"Veillez écrire un commentaire\"\r\n                                    onInput={inputHandler}\r\n                                    initialValue=\"\"\r\n                                    initialValid={false}\r\n                                />\r\n                            </form>\r\n                            <button form=\"comment-form\" className={styles.btn} type=\"submit\">\r\n                                <img className={styles.icon} src={send} alt=\"publier commentaire\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentPost;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./SelectField.module.css\";\r\n\r\n// Component\r\nconst SelectField = (props) => {\r\n    // UseState des catégories\r\n    const [category, setCategory] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const categoryPickerRef = useRef();\r\n\r\n    // Fontion qui prend l'option du select\r\n    const pickedHandler = (event) => {\r\n        let pickedCategory;\r\n        let categoryIsValid = isValid;\r\n\r\n        // Si le valeur dans l'événement est different à rien\r\n        if (event.target.value !== \" \") {\r\n            pickedCategory = event.target.value;\r\n            setCategory(pickedCategory);\r\n            setIsValid(true);\r\n            categoryIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            categoryIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedCategory, categoryIsValid);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dropdown}>\r\n            <label className={styles.label} htmlFor={props.id}>\r\n                {props.label}\r\n            </label>\r\n            <select\r\n                id={props.id}\r\n                className={`${styles.dropdown_btn}\r\n        ${!isValid && category && styles.invalid}`}\r\n                ref={categoryPickerRef}\r\n                onChange={pickedHandler}\r\n            >\r\n                <option className={styles.option} value=\" \">\r\n                    Veuillez choisir une catégorie\r\n                </option>\r\n                {props.options.map((option, index) => {\r\n                    return (\r\n                        <option className={styles.option} key={index} value={option.id}>\r\n                            {option.categoryIs}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n            {!isValid && category && <p className={styles.input_error}>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { MinLength, MaxLength } from \"../../utils/validators\";\r\n\r\n// icons\r\nimport backIcon from \"../../images/back-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport UIBtn from \"../../components/Buttons/UIBtn/UIBtn\";\r\nimport ImageUpload from \"../../components/ImageUpload/ImageUpload\";\r\nimport SelectField from \"../../components/SelectField/SelectField\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./NewPost.module.css\";\r\n\r\nconst NewPost = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    //Categories State\r\n    const [categories, setCategories] = useState();\r\n\r\n    // Form State\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            title: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            category: {\r\n                value: null,\r\n                isValid: false,\r\n            },\r\n            image: {\r\n                value: null,\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    //Fetch Categories\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const categories = await sendRequest(`${process.env.REACT_APP_API_URL}/posts/categories`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n\r\n                setCategories(categories);\r\n            } catch (err) {}\r\n        };\r\n        fetchPosts();\r\n    }, [sendRequest, auth.token, setCategories]);\r\n\r\n    // Send Post au Backend\r\n    const sendPostHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"title\", formState.inputs.title.value);\r\n        formData.append(\"category\", formState.inputs.category.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n\r\n        // console.log(\"To Backend =>\", formData);\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/posts`, \"POST\", formData, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            history.push(`/posts`);\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Back Button\r\n    const backHandle = (e) => {\r\n        e.preventDefault();\r\n        props.history.goBack();\r\n    };\r\n\r\n    // Affichage des boutons pour Desktop\r\n    let sendBtn;\r\n    let backBtn;\r\n\r\n    if (width >= 1024) {\r\n        sendBtn = (\r\n            <div className={styles.send_btn}>\r\n                <UIBtn id=\"send-post-btn\" form=\"send-post-form\" name=\"Publier\" type=\"submit\" btnType=\"valid\" />\r\n            </div>\r\n        );\r\n        backBtn = (\r\n            <button className={styles.back_btn} onClick={backHandle}>\r\n                <img className=\"icon_red\" src={backIcon} alt=\"\" />\r\n            </button>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!categories) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {!isLoading && categories && (\r\n                <>\r\n                    <header className={styles.head}>\r\n                        <div className={styles.tab}>\r\n                            {backBtn}\r\n                            <div className={styles.tab_border}>\r\n                                <h3 className={styles.title}>Nouvelle Publication</h3>\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"container\">\r\n                        <form className={styles.form} id=\"send-post-form\" onSubmit={sendPostHandler}>\r\n                            <InputField\r\n                                id=\"title\"\r\n                                name=\"title\"\r\n                                type=\"text\"\r\n                                placeholder=\"Titre ou message de la publication\"\r\n                                maxLength=\"100\"\r\n                                element=\"textarea\"\r\n                                hasLabel=\"no\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(2), MaxLength(100)]}\r\n                                errorText=\"Veuillez écrire un commentaire pour votre publication\"\r\n                                onInput={inputHandler}\r\n                                initialValue={formState.inputs.title.value}\r\n                                initialValid={formState.inputs.title.isValid}\r\n                            />\r\n                            <ImageUpload\r\n                                center\r\n                                id=\"image\"\r\n                                onInput={inputHandler}\r\n                                errorText=\"Choisissez une image ou un gif\"\r\n                            />\r\n                            <SelectField\r\n                                id=\"category\"\r\n                                label=\"Catégories :\"\r\n                                name=\"catégories\"\r\n                                onInput={inputHandler}\r\n                                options={categories}\r\n                                errorText=\"Choisissez une catégorie\"\r\n                            />\r\n                            {sendBtn}\r\n                        </form>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./hooks/auth-hook\";\r\nimport { AuthContext } from \"./context/auth-context\";\r\n\r\n// Containers\r\nimport Layout from \"./containers/Layout/Layout\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport Login from \"./containers/Login/Login\";\r\nimport Signup from \"./containers/SignUp/SignUp\";\r\nimport Posts from \"./containers/Posts/Posts\";\r\nimport Menu from \"./containers/Menu/Menu\";\r\nimport UserProfile from \"./containers/UserProfile/UserProfile\";\r\nimport UpdateProfile from \"./containers/UpdateProfile/UpdateProfile\";\r\nimport CommentPost from \"./containers/CommentPost/CommentPost\";\r\nimport NewPost from \"./containers/NewPost/NewPost\";\r\n\r\n// Styles\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n    const { userId, token, account, login, logout } = useAuth();\r\n\r\n    let routes;\r\n\r\n    if (token) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/posts\" exact component={Posts} />\r\n                <Route path=\"/posts/new\" exact component={NewPost} />\r\n                <Route path=\"/menu\" exact component={Menu} />\r\n                <Route path=\"/profile/:id\" exact component={UserProfile} />\r\n                <Route path=\"/profile/:id/update\" exact component={UpdateProfile} />\r\n                <Route path=\"/posts/:id\" exact component={CommentPost} />\r\n                <Redirect to=\"groupomania.app/posts\" />\r\n            </Switch>\r\n        );\r\n    } else {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/login\" exact component={Login} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <Redirect to=\"groupomania.app/\" />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isLoggedIn: !!token,\r\n                token: token,\r\n                userId: userId,\r\n                account: account,\r\n                login: login,\r\n                logout: logout,\r\n            }}\r\n        >\r\n            <Layout>{routes}</Layout>\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}