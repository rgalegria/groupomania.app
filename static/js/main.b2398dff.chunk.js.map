{"version":3,"sources":["containers/Menu/Menu.module.css","containers/UserProfile/UserProfile.module.css","images/back-icon.svg","containers/UpdateProfile/UpdateProfile.module.css","components/ImageUpload/ImageUpload.module.css","components/InputField/InputField.module.css","components/Counter/Counter.module.css","containers/NewPost/NewPost.module.css","components/Buttons/TabBtn/TabBtn.module.css","containers/CommentPost/CommentPost.module.css","images/generic_profile_picture.jpg","components/Buttons/UIBtn/UIBtn.module.css","components/UserHeader/UserHeader.module.css","components/SelectField/SelectField.module.css","components/Buttons/ReactionBtn/ReactionBtn.module.css","components/Post/Post.module.css","images/person-icon.svg","images/logo.png","images/password-icon.svg","components/Modal/Modal.module.css","containers/Posts/Posts.module.css","images/signup-icon.svg","images/login-icon.svg","images/post-icon.svg","images/categories-icon.svg","images/close-icon.svg","images/send-icon.svg","images/modify-icon.svg","components/Buttons/NavBtn/NavBtn.module.css","components/Buttons/ActionBtn/ActionBtn.module.css","components/ConfirmModal/ConfirmModal.module.css","components/Comment/Comment.module.css","images/menu-icon.svg","images/agenda-icon.svg","images/logout-icon.svg","images/posts-icon.svg","components/Backdrop/Backdrop.module.css","components/ErrorModal/ErrorModal.module.css","images/lastname-icon.svg","images/email-icon.svg","containers/SignUp/Signup.module.css","images/clock-icon.svg","images/coffee-icon.svg","images/like-icon.svg","images/dislike-icon.svg","images/comment-icon.svg","images/comments-icon.svg","images/x-icon.svg","components/PostList/PostList.module.css","images/linkedin-icon.svg","images/linkedin-grey-icon.svg","images/logotype.svg","images/delete-icon.svg","images/ok-icon.svg","images/image-icon.svg","hooks/auth-hook.js","context/auth-context.js","hooks/window-hook.js","components/Buttons/NavBtn/NavBtn.js","components/Nav/nav_home.js","components/Buttons/ActionBtn/ActionBtn.js","components/Nav/nav_login.js","components/Nav/nav_signup.js","components/Nav/nav_posts.js","components/Nav/nav_menu.js","components/Nav/Nav_newpost.js","components/Nav/nav_comments.js","components/Nav/nav_profile.js","components/Nav/nav_update.js","components/Nav/Nav.js","hooks/httpRequest-hook.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","components/Buttons/UIBtn/UIBtn.js","components/ErrorModal/ErrorModal.js","components/LoadingSpinner/LoadingSpinner.js","containers/Menu/Menu.js","containers/Layout/Layout.js","containers/Home/Home.js","hooks/form-hook.js","utils/validators.js","components/InputField/InputField.js","containers/Login/Login.js","containers/SignUp/SignUp.js","components/Buttons/TabBtn/TabBtn.js","components/Buttons/ReactionBtn/ReactionBtn.js","components/UserHeader/UserHeader.js","components/Post/Post.js","components/PostList/PostList.js","containers/Posts/Posts.js","components/Counter/Counter.js","containers/UserProfile/UserProfile.js","components/ConfirmModal/ConfirmModal.js","components/ImageUpload/ImageUpload.js","containers/UpdateProfile/UpdateProfile.js","components/Comment/Comment.js","containers/CommentPost/CommentPost.js","components/SelectField/SelectField.js","containers/NewPost/NewPost.js","App.js","index.js"],"names":["module","exports","logoutTimer","AuthContext","createContext","isLoggedIn","userId","token","account","login","logout","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","NavBtn","props","to","link","className","btnStyle","styles","btn","icon","iconColor","src","alt","textStyle","text","name","NavHome","signup","ActionBtn","id","form","type","onClick","NavLogin","back","backHandle","NavSignUp","NavPost","menu","post","categories","NavMenu","close","NavNewPost","send","NavComments","withRouter","modifyBtn","auth","useContext","Number","location","pathname","split","modify","nav","e","preventDefault","history","goBack","process","GITHUB_URL","commentHandle","console","log","useHttpRequest","isLoading","setIsLoading","error","setError","activeRequest","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","Backdrop","ReactDOM","createPortal","backdrop","document","getElementById","ModalOverlay","content","modal","style","onSubmit","event","modal__content","contentClass","children","modal__footer","footerClass","footer","Modal","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","UIBtn","btnType","valid","cancel","warning","buttonClass","justify","ErrorModal","onClear","header","LoadingSpinner","asOverlay","Menu","useHistory","profileData","setProfileData","mounted","Authorization","userData","fetchPosts","navLinks","border","posts","container","cover","background_img","wrapper","photo_url","GenProfile","profile_photo","firstName","lastName","hero_block","title","list","person","agenda","logout_margin","path","mobileLayout","desktopLayout","Home","logo","formReducer","state","action","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","inputData","formValidity","MinLength","val","MaxLength","validate","validators","validator","trim","length","test","inputReducer","isTouched","InputField","initialValue","initialValid","inputState","onInput","typeOfBox","borderColor","changeHandler","target","touchHandler","textIsWhite","white_box","border_white","box","label","htmlFor","element","input_height","placeholder","autoComplete","autocomplete","onChange","onBlur","textarea","rows","block","invalid","input_error","errorText","Login","email","password","inputHandler","loginHandler","data","JSON","stringify","hasLabel","SignUp","signupHandler","toUpperCase","input_list","lastname","TabBtn","active","btn_active","container_active","text_active","icon_active","ReactionBtn","reactionColor","reaction","like","dislike","comment","comments","reaction_btn","styling","onReaction","UserHeader","newPostDate","category","deleteBtn","postDate","Date","date","today","diffTime","Math","abs","ceil","floor","text_division","UserId","delete_btn","onDelete","delete_icon","DeleteX","photo","commentBlock","postId","likes","likesCounter","setLikesCounter","dislikes","dislikesCounter","setDislikesCounter","userReaction","setUserReaction","hasReacted","setHasReacted","userReactionHandler","currentTarget","currLikesCounter","currDislikesCounter","PostId","reacted","catch","err","DeletePostHandler","image_url","post_link","comment_btn","push_right","reactions","PostList","items","map","key","post_date","onDeletePost","Posts","setPosts","mostRecents","mostLiked","activeBtn","setActiveBtn","initData","newPost","fetchMostRecent","postsData","fetchMostLiked","mostLikedData","postIcon","clockIcon","coffeeIcon","deletedPostId","prevPosts","Counter","counter","count","postsCount","logotype","likesCount","UserProfile","useParams","fetchUser","desktopNav","iconStyle","class_mod","linkedin_url","href","rel","Linkedin_icon","LinkedinIcon","LinkedinGreyIcon","department","role","ConfirmModal","okIcon","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","pickedImageHandler","pickedFile","fileIsValid","files","image_container","preview_post","red_banner_post","banner_text_post","icon_block","Image","accept","display","photo_container","preview_img","red_banner","banner_text","UpdateProfile","userDataState","setUserDataState","showInfo","setShowInfo","showConfirmModal","setShowConfirmModal","image","setFormState","updateProfileHandler","formData","FormData","append","openConfirmModalHandler","updatePasswordHandler","showDeleteMessage","deleteUserHandler","setTimeout","center","update_list","maxLength","deleteIcon","btn_block","Comment","DeleteCommentHandler","onDeleteComment","CommentPost","setPost","setComments","comments_list","fetchPost","postCommentHandler","newCommentData","prevComments","deleteCommentHandler","deletedCommentId","index","comment_date","comment_wrap","comment_form","SelectField","setCategory","categoryPickerRef","dropdown","dropdown_btn","ref","pickedCategory","categoryIsValid","option","options","categoryIs","NewPost","setCategories","sendBtn","backBtn","sendPostHandler","send_btn","back_btn","backIcon","head","tab","tab_border","App","routes","setToken","setUserId","setAccount","tokenExpirationDate","setTokenExpirationDate","expirationDate","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","clearTimeout","storedData","parse","getItem","useAuth","exact","component","Signup","Provider","app","render"],"mappings":"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","file":"static/js/main.b2398dff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background_img\":\"Menu_background_img__38xqw\",\"cover\":\"Menu_cover__2QfiB\",\"wrapper\":\"Menu_wrapper___A9bb\",\"profile_photo\":\"Menu_profile_photo__1CRng\",\"hero_block\":\"Menu_hero_block__2TqsP\",\"title\":\"Menu_title__1kCzW\",\"list\":\"Menu_list__3420P\",\"btn\":\"Menu_btn__X1pAl\",\"logout_margin\":\"Menu_logout_margin__1Xk0m\",\"border\":\"Menu_border__2f53Y\",\"text\":\"Menu_text__UQLh1\",\"icon\":\"Menu_icon__gdlxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"class_mod\":\"UserProfile_class_mod__16KNs\",\"background_img\":\"UserProfile_background_img__2CQaq\",\"wrapper\":\"UserProfile_wrapper__jPFIA\",\"profile_photo\":\"UserProfile_profile_photo__1Tazv\",\"hero_block\":\"UserProfile_hero_block__2HBmg\",\"title\":\"UserProfile_title__3CVsm\",\"Linkedin_icon\":\"UserProfile_Linkedin_icon__2CkDm\",\"department\":\"UserProfile_department__3X9cU\",\"role\":\"UserProfile_role__2U9PO\",\"email\":\"UserProfile_email__3Nyqf\",\"btnStyle\":\"UserProfile_btnStyle__35lhE\",\"iconStyle\":\"UserProfile_iconStyle__aiV3S\",\"nav\":\"UserProfile_nav__1seiB\"};","module.exports = __webpack_public_path__ + \"static/media/back-icon.69eb6e06.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"class_mod\":\"UpdateProfile_class_mod__25dgP\",\"background_img\":\"UpdateProfile_background_img__Bh1p6\",\"wrapper\":\"UpdateProfile_wrapper__2_W_v\",\"photo_container\":\"UpdateProfile_photo_container__uJcWh\",\"profile_photo\":\"UpdateProfile_profile_photo__10YU2\",\"preview_img\":\"UpdateProfile_preview_img__3AtZ8\",\"red_banner\":\"UpdateProfile_red_banner__pNoyR\",\"banner_text\":\"UpdateProfile_banner_text__304PR\",\"title\":\"UpdateProfile_title__3svLX\",\"role\":\"UpdateProfile_role__2SyI6\",\"update_list\":\"UpdateProfile_update_list__3IEE_\",\"btn_list\":\"UpdateProfile_btn_list__3kB-Q\",\"btn_block\":\"UpdateProfile_btn_block__27N7E\",\"btnStyle\":\"UpdateProfile_btnStyle__3b7Nq\",\"iconStyle\":\"UpdateProfile_iconStyle__3aM6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image-upload__preview\":\"ImageUpload_image-upload__preview__1aPwU\",\"photo_container\":\"ImageUpload_photo_container__h-9K1\",\"profile_photo\":\"ImageUpload_profile_photo__3ycyX\",\"preview_img\":\"ImageUpload_preview_img__1M4BB\",\"red_banner\":\"ImageUpload_red_banner__FkUfd\",\"banner_text\":\"ImageUpload_banner_text__1clgr\",\"image_container\":\"ImageUpload_image_container__1fjxI\",\"icon_block\":\"ImageUpload_icon_block__2d8se\",\"icon\":\"ImageUpload_icon__TrePL\",\"text\":\"ImageUpload_text__25s2J\",\"preview_post\":\"ImageUpload_preview_post__2o_Z0\",\"red_banner_post\":\"ImageUpload_red_banner_post__emvt7\",\"banner_text_post\":\"ImageUpload_banner_text_post__2OVEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"InputField_block__3Z4Ew\",\"border_white\":\"InputField_border_white__j4Tl-\",\"invalid\":\"InputField_invalid__1V_wR\",\"label\":\"InputField_label__1bYzx\",\"input_error\":\"InputField_input_error__eZQes\",\"wrapper\":\"InputField_wrapper__30toi\",\"input_height\":\"InputField_input_height__1w_Pg\",\"textarea\":\"InputField_textarea__31sHW\",\"icon\":\"InputField_icon__3G-xh\",\"box\":\"InputField_box__2c4T3\",\"white_box\":\"InputField_white_box__1x-zJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Counter_block__1IQGN\",\"counter\":\"Counter_counter__1TppR\",\"title\":\"Counter_title__DD1Hs\",\"count\":\"Counter_count__3i1th\",\"text\":\"Counter_text__3ouX4\",\"logotype\":\"Counter_logotype__2JUJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewPost_container__yjssi\",\"head\":\"NewPost_head__3a5ci\",\"tab\":\"NewPost_tab__1WDY2\",\"tab_border\":\"NewPost_tab_border__2Dhfa\",\"wrapper\":\"NewPost_wrapper__3-CwQ\",\"title\":\"NewPost_title__1orbJ\",\"form\":\"NewPost_form__TdeRm\",\"back_btn\":\"NewPost_back_btn__2G847\",\"send_btn\":\"NewPost_send_btn__3hAc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_active\":\"TabBtn_btn_active__26XVG\",\"container_active\":\"TabBtn_container_active__1A7rL\",\"icon_active\":\"TabBtn_icon_active__17Vci\",\"text_active\":\"TabBtn_text_active__zMsFx\",\"btn\":\"TabBtn_btn__2uC5t\",\"container\":\"TabBtn_container__1B7e2\",\"icon\":\"TabBtn_icon__3m7IN\",\"text\":\"TabBtn_text__2s_8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CommentPost_container__23RUZ\",\"wrapper\":\"CommentPost_wrapper__EwFuZ\",\"comment_form\":\"CommentPost_comment_form__3iAGW\",\"comment_wrap\":\"CommentPost_comment_wrap__1JaBM\",\"btn\":\"CommentPost_btn__2qso_\",\"icon\":\"CommentPost_icon__2WgTm\",\"box\":\"CommentPost_box__1GPGD\"};","module.exports = __webpack_public_path__ + \"static/media/generic_profile_picture.ffc734c4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"UIBtn_btn__N6iYR\",\"text\":\"UIBtn_text__xz3uR\",\"icon\":\"UIBtn_icon__1cT3O\",\"justify\":\"UIBtn_justify__3bSeM\",\"warning\":\"UIBtn_warning__3I7AU\",\"valid\":\"UIBtn_valid__2pyig\",\"cancel\":\"UIBtn_cancel__2nJ8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"UserHeader_block__3Hac-\",\"photo\":\"UserHeader_photo__3f4as\",\"text\":\"UserHeader_text__2s189\",\"text_division\":\"UserHeader_text_division__1-K40\",\"delete_btn\":\"UserHeader_delete_btn___eV99\",\"delete_icon\":\"UserHeader_delete_icon__1EWPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SelectField_label__2wZZM\",\"dropdown\":\"SelectField_dropdown__2SpfF\",\"dropdown_btn\":\"SelectField_dropdown_btn__1CQts\",\"option\":\"SelectField_option__P3WRu\",\"input_error\":\"SelectField_input_error__30Bmm\",\"invalid\":\"SelectField_invalid__147oe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reaction_btn\":\"ReactionBtn_reaction_btn__1Bgt1\",\"icon\":\"ReactionBtn_icon__mIbal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Post_block__38d65\",\"title\":\"Post_title__2DVAi\",\"photo\":\"Post_photo__vWhTV\",\"reactions\":\"Post_reactions__3CJmz\",\"comments_btn\":\"Post_comments_btn__1_V_j\",\"push_right\":\"Post_push_right__3ftgG\",\"comment_btn\":\"Post_comment_btn__3j2Pz\"};","module.exports = __webpack_public_path__ + \"static/media/person-icon.13fff284.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9fbde2c2.png\";","module.exports = __webpack_public_path__ + \"static/media/password-icon.3807eb0c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__-1MCv\",\"modal__content\":\"Modal_modal__content__3VqUc\",\"modal__footer\":\"Modal_modal__footer__3S5F9\",\"modal-enter\":\"Modal_modal-enter__3QJmg\",\"modal-enter-active\":\"Modal_modal-enter-active__2zSdo\",\"modal-exit\":\"Modal_modal-exit__1Lmk7\",\"modal-exit-active\":\"Modal_modal-exit-active__1GIeg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Posts_header__zOZoC\",\"container\":\"Posts_container__vip4Q\",\"btn\":\"Posts_btn__2JiWD\",\"text\":\"Posts_text__3vnbo\",\"icon\":\"Posts_icon__3gQXE\"};","module.exports = __webpack_public_path__ + \"static/media/signup-icon.34cd9cab.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-icon.d2e9ba6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/post-icon.b8ec1592.svg\";","module.exports = __webpack_public_path__ + \"static/media/categories-icon.a2cc9e0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-icon.80a3ebc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/send-icon.56611ebb.svg\";","module.exports = __webpack_public_path__ + \"static/media/modify-icon.b5ae602e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"NavBtn_btn__pL39T\",\"icon\":\"NavBtn_icon__3ZAh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ActionBtn_btn__3aNiu\",\"icon\":\"ActionBtn_icon__3RizB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ConfirmModal_btn__20rU_\",\"okIcon\":\"ConfirmModal_okIcon__3gHcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Comment_block__3Cr_7\",\"text\":\"Comment_text__3vWSc\"};","module.exports = __webpack_public_path__ + \"static/media/menu-icon.e07316bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/agenda-icon.1a8a09ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout-icon.d93f43f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/posts-icon.b39fb484.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__28QCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ErrorModal_btn__1_N58\"};","module.exports = __webpack_public_path__ + \"static/media/lastname-icon.ab6f7952.svg\";","module.exports = __webpack_public_path__ + \"static/media/email-icon.75cb8ec9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_list\":\"Signup_input_list__yjwKS\"};","module.exports = __webpack_public_path__ + \"static/media/clock-icon.400e2e3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/coffee-icon.3849d652.svg\";","module.exports = __webpack_public_path__ + \"static/media/like-icon.d8a1ba16.svg\";","module.exports = __webpack_public_path__ + \"static/media/dislike-icon.06913d04.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment-icon.e600818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/comments-icon.2f8c4bd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-icon.eeaccb41.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PostList_header__1aZJu\",\"container\":\"PostList_container__2JMvx\"};","module.exports = __webpack_public_path__ + \"static/media/linkedin-icon.06701358.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-grey-icon.53c46fed.svg\";","module.exports = __webpack_public_path__ + \"static/media/logotype.9c126e27.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon.5ce044d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok-icon.353b7575.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-icon.937fb3c8.svg\";","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    // UseState du AuthContext\r\n    const [token, setToken] = useState(false);\r\n    const [userId, setUserId] = useState(false);\r\n    const [account, setAccount] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n    // Login usCallback pour ne pas rentrer dans un cycle infinit\r\n    const login = useCallback((userId, token, account, expirationDate) => {\r\n        setUserId(userId);\r\n        setToken(token);\r\n        setAccount(account);\r\n\r\n        // Creér une date 24h dans le futur (validité de la session)\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 * 24);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n\r\n        // Stocker les paramètres dans le localStorage du navigateur\r\n        localStorage.setItem(\r\n            \"userData\",\r\n            JSON.stringify({\r\n                userId: userId,\r\n                token: token,\r\n                account: account,\r\n                expiration: tokenExpirationDate.toISOString(),\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    // logout remets tout à null et supprime l'objet du localStorage\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        setAccount(null);\r\n        setTokenExpirationDate(null);\r\n        localStorage.removeItem(\"userData\");\r\n    }, []);\r\n\r\n    // Timer de la session\r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    // Auto-login à l'application en utilisant le localStorage pour s'identifier\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n        if (\r\n            storedData &&\r\n            storedData.userId &&\r\n            storedData.token &&\r\n            storedData.account &&\r\n            new Date(storedData.expiration) > new Date()\r\n        ) {\r\n            login(storedData.userId, storedData.token, storedData.account, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { userId, token, account, login, logout };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null,\r\n    account: null,\r\n    login: () => {},\r\n    logout: () => {},\r\n});\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n}\r\n\r\nexport const useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport styles from \"./NavBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<NavBtn \r\n    link={props.link} \r\n    btnStyle={styles.class-name}\r\n    textStyle={styles.class-name}\r\n    icon={icon-name}\r\n/>\r\n\r\n*/\r\n\r\nconst NavBtn = (props) => {\r\n    return (\r\n        <Link to={props.link} className={props.btnStyle || styles.btn}>\r\n            <img className={`${styles.icon} ${props.iconColor}`} src={props.icon} alt=\"\" />\r\n            <span className={props.textStyle || styles.text}>{props.name}</span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default NavBtn;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport signup from \"../../images/signup-icon.svg\";\r\nimport login from \"../../images/login-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavHome = () => {\r\n    return (\r\n        <>\r\n            <NavBtn icon={login} name=\"connexion\" link=\"/login\" iconColor=\"icon_white\" />\r\n            <NavBtn icon={signup} name=\"s'inscrire\" link=\"/signup\" iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavHome;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./ActionBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<ActionBtn \r\n    id={props.id}\r\n    form={id du formulaire} \r\n    type={type de bouton}\r\n    onClick={fonction onClick}\r\n    icon={icon-name}\r\n    iconColor={couleur de l'icône}\r\n/>\r\n\r\n*/\r\n\r\nconst ActionBtn = (props) => {\r\n    return (\r\n        <button id={props.id} form={props.form} className={styles.btn} type={props.type} onClick={props.onClick}>\r\n            <img className={`${styles.icon} ${props.iconColor}`} src={props.icon} alt=\"\" />\r\n            {props.name}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ActionBtn;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport login from \"../../images/login-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../../components/Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavLogin = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n            <ActionBtn\r\n                id=\"login-btn\"\r\n                form=\"login-form\"\r\n                name=\"connexion\"\r\n                type=\"submit\"\r\n                icon={login}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavLogin;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport signup from \"../../images/signup-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavSignUp = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n            <ActionBtn\r\n                id=\"signup-btn\"\r\n                form=\"signup-form\"\r\n                name=\"s'inscrire\"\r\n                type=\"submit\"\r\n                icon={signup}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavSignUp;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport menu from \"../../images/menu-icon.svg\";\r\nimport post from \"../../images/post-icon.svg\";\r\nimport categories from \"../../images/categories-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavPost = () => {\r\n    return (\r\n        <>\r\n            <NavBtn id=\"menu\" name=\"menu\" icon={menu} link=\"/menu\" iconColor=\"icon_white\" />\r\n            <NavBtn id=\"post\" name=\"publier\" icon={post} link=\"/posts/new\" iconColor=\"icon_white\" />\r\n            <NavBtn id=\"categories\" name=\"catégories\" icon={categories} link=\"/posts\" iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavPost;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport close from \"../../images/close-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavMenu = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={close} name=\"fermer\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavMenu;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport send from \"../../images/send-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavNewPost = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n            <ActionBtn\r\n                id=\"send-post-btn\"\r\n                form=\"send-post-form\"\r\n                name=\"publier\"\r\n                type=\"submit\"\r\n                icon={send}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavNewPost;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\n\r\n// Components\r\nimport ActionBtn from \"../../components/Buttons/ActionBtn/ActionBtn\";\r\n\r\nconst NavComments = (props) => {\r\n    return (\r\n        <>\r\n            <ActionBtn icon={back} name=\"retourner\" onClick={props.backHandle} iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavComments;\r\n","import React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Icons\r\nimport back from \"../../images/back-icon.svg\";\r\nimport modify from \"../../images/modify-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavProfile = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    const userId = Number(props.location.pathname.split(\"/\")[2]);\r\n\r\n    let modifyBtn;\r\n\r\n    if (auth.userId === userId) {\r\n        modifyBtn = (\r\n            <NavBtn\r\n                id=\"update-profile\"\r\n                name=\"modifier\"\r\n                icon={modify}\r\n                link={`/profile/${auth.userId}/update`}\r\n                iconColor=\"icon_white\"\r\n            />\r\n        );\r\n    } else {\r\n        modifyBtn = \"\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBtn id=\"back\" name=\"retourner\" icon={back} link=\"/posts\" iconColor=\"icon_white\" />\r\n            {auth.userId && userId && modifyBtn}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavProfile);\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Icons\r\nimport close from \"../../images/close-icon.svg\";\r\n\r\n// Components\r\nimport NavBtn from \"../Buttons/NavBtn/NavBtn\";\r\n\r\nconst NavLogin = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <>\r\n            <NavBtn icon={close} name=\"annuler\" link={`/profile/${auth.userId}`} iconColor=\"icon_white\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavLogin;\r\n","import React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Components\r\nimport NavHome from \"./nav_home\";\r\nimport NavLogin from \"./nav_login\";\r\nimport NavSignUp from \"./nav_signup\";\r\nimport NavPost from \"./nav_posts\";\r\nimport NavMenu from \"./nav_menu\";\r\nimport NavNewPost from \"./Nav_newpost\";\r\nimport NavComments from \"./nav_comments\";\r\nimport NavProfile from \"./nav_profile\";\r\nimport NavUpdate from \"./nav_update\";\r\n\r\n// Styles\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    const id = props.location.pathname.split(\"/\")[2];\r\n\r\n    const backHandle = (e) => {\r\n        e.preventDefault();\r\n        props.history.goBack();\r\n    };\r\n\r\n    let nav;\r\n\r\n    switch (props.location.pathname) {\r\n        case `${process.env.GITHUB_URL}/`:\r\n            nav = <NavHome />;\r\n            break;\r\n        case `${process.env.GITHUB_URL}/login`:\r\n            nav = <NavLogin backHandle={backHandle} />;\r\n            break;\r\n        case `${process.env.GITHUB_URL}/signup`:\r\n            nav = <NavSignUp backHandle={backHandle} />;\r\n            break;\r\n        case `${process.env.GITHUB_URL}/posts`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavPost backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `${process.env.GITHUB_URL}/menu`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavMenu backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `${process.env.GITHUB_URL}/posts/new`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavNewPost backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `${process.env.GITHUB_URL}/posts/${id}`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavComments backHandle={backHandle} commentHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `${process.env.GITHUB_URL}/profile/${id}`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavProfile backHandle={backHandle} />;\r\n            }\r\n            break;\r\n        case `${process.env.GITHUB_URL}/profile/${auth.userId}/update`:\r\n            if (auth.isLoggedIn) {\r\n                nav = <NavUpdate />;\r\n            }\r\n            break;\r\n        default:\r\n            console.log(\"NAV: Something went wrong!\");\r\n    }\r\n\r\n    return (\r\n        <footer>\r\n            <div className=\"nav_btn_list\">{nav}</div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default withRouter(Nav);\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpRequest = () => {\r\n    // useState pour définir l'état de chargement et les erreurs produits pendant la requête\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeRequest = useRef([]);\r\n\r\n    // Fonction fetch avec callBack pour eviter des loops infinits\r\n    const sendRequest = useCallback(async (url, method = \"\", body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortCtrl = new AbortController();\r\n        activeRequest.current.push(httpAbortCtrl);\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal,\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            activeRequest.current = activeRequest.current.filter((reqCtrl) => reqCtrl !== httpAbortCtrl);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            // Si reponse ok, retourner les donnés et finir l'état chargement\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (err) {\r\n            // Si un erreur s'est produit, il le capture et le mets sur son useState\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    // Annule la requête\r\n    useEffect(() => {\r\n        return () => {\r\n            activeRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n        };\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Styles\r\nimport styles from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n    // Portail référencé sur l'html principal comme \"Backdrop-hook\"\r\n    return ReactDOM.createPortal(\r\n        <div className={styles.backdrop} onClick={props.onClick}></div>,\r\n        document.getElementById(\"backdrop-hook\")\r\n    );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n// Components\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\n//Styles\r\nimport styles from \"./Modal.module.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n    const content = (\r\n        <div className={`${styles.modal} ${props.className}`} style={props.style}>\r\n            {/* <header className={`${styles.modal__header} ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header> */}\r\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}>\r\n                <div className={`${styles.modal__content} ${props.contentClass}`}>{props.children}</div>\r\n                <footer className={`${styles.modal__footer} ${props.footerClass}`}>{props.footer}</footer>\r\n            </form>\r\n        </div>\r\n    );\r\n    return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={10} classNames={styles.modal}>\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./UIBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<ActionBtn \r\n    id={props.id}\r\n    form={id du formulaire} \r\n    name={nom bu bouton} \r\n    type={type de bouton}\r\n    onClick={fonction onClick}\r\n    btType={\"valid\", \"cancel\", \"warning\"}\r\n    icon={icon-name}\r\n    iconColor={couleur de l'icône}\r\n/>\r\n\r\n*/\r\n\r\nconst UIBtn = (props) => {\r\n    let icon;\r\n\r\n    if (props.icon) {\r\n        icon = <img id=\"icon\" className={`${styles.icon} ${props.iconColor}`} src={props.icon} alt=\"\" />;\r\n    } else {\r\n        icon = null;\r\n    }\r\n\r\n    let btnType;\r\n\r\n    if (props.btnType === \"valid\") {\r\n        btnType = styles.valid;\r\n    }\r\n    if (props.btnType === \"cancel\") {\r\n        btnType = styles.cancel;\r\n    }\r\n    if (props.btnType === \"warning\") {\r\n        btnType = styles.warning;\r\n    }\r\n\r\n    return (\r\n        <button\r\n            id={props.id}\r\n            className={`${styles.btn} ${btnType} ${props.buttonClass}`}\r\n            type={props.type}\r\n            form={props.form}\r\n            onClick={props.onClick}\r\n        >\r\n            <div className={styles.justify}>\r\n                <span className={styles.text}>{props.name}</span>\r\n                {icon}\r\n            </div>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default UIBtn;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport UIBtn from \"../Buttons/UIBtn/UIBtn\";\r\n\r\n// Styles\r\nimport styles from \"./ErrorModal.module.css\";\r\n\r\nconst ErrorModal = (props) => {\r\n    return (\r\n        <Modal\r\n            onCancel={props.onClear}\r\n            header=\"An Error Occurred!\"\r\n            show={!!props.error}\r\n            footer={\r\n                <UIBtn\r\n                    id=\"accept-btn\"\r\n                    name=\"Ok\"\r\n                    type=\"submit\"\r\n                    btnType=\"warning\"\r\n                    onClick={props.onClear}\r\n                    buttonClass={styles.btn}\r\n                />\r\n            }\r\n        >\r\n            <p>{props.error}</p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport \"./LoadingSpinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n    return (\r\n        <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\r\n            <div className=\"lds-dual-ring\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Static Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Icons\r\nimport person from \"../../images/person-icon.svg\";\r\nimport agenda from \"../../images/agenda-icon.svg\";\r\nimport categories from \"../../images/categories-icon.svg\";\r\nimport logout from \"../../images/logout-icon.svg\";\r\nimport posts from \"../../images/posts-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./Menu.module.css\";\r\n\r\nconst Menu = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    //Profile Hook\r\n    const [profileData, setProfileData] = useState();\r\n\r\n    //Fetch Most recent posts\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        if (auth.token && auth.userId) {\r\n            const fetchPosts = async () => {\r\n                try {\r\n                    const userData = await sendRequest(\r\n                        `${process.env.REACT_APP_API_URL}/profile/${auth.userId}`,\r\n                        \"GET\",\r\n                        null,\r\n                        {\r\n                            Authorization: \"Bearer \" + auth.token,\r\n                        }\r\n                    );\r\n                    if (mounted) {\r\n                        setProfileData(userData);\r\n                    }\r\n                } catch (err) {}\r\n            };\r\n            fetchPosts();\r\n        }\r\n\r\n        return () => (mounted = false);\r\n    }, [sendRequest, auth.token, auth.userId, setProfileData]);\r\n\r\n    const logoutHandler = (event) => {\r\n        event.preventDefault();\r\n        auth.logout();\r\n        history.push(`/`);\r\n    };\r\n\r\n    // Affichage Navlinks en desktop\r\n    let navLinks;\r\n    if (width >= 1024) {\r\n        navLinks = (\r\n            <>\r\n                <Link to=\"/posts\" className={`${styles.btn} ${styles.border}`}>\r\n                    <span className={styles.text}>Publications</span>\r\n                    <img className={`${styles.icon} icon_white`} src={posts} alt=\"\" />\r\n                </Link>\r\n                <Link to=\"/posts\" className={`${styles.btn} ${styles.border}`}>\r\n                    <span className={styles.text}>Catégories</span>\r\n                    <img className={`${styles.icon} icon_white`} src={categories} alt=\"\" />\r\n                </Link>\r\n            </>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!profileData) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <>\r\n                {!isLoading && profileData && (\r\n                    <div className={styles.cover}>\r\n                        <div className={styles.background_img}></div>\r\n                        <div className={styles.wrapper}>\r\n                            <img\r\n                                src={profileData.photo_url || GenProfile}\r\n                                className={styles.profile_photo}\r\n                                alt={`${profileData.firstName} ${profileData.lastName}`}\r\n                            />\r\n                            <div className={styles.hero_block}>\r\n                                <h2 className={styles.title}>Bienvenue {profileData.firstName} !</h2>\r\n                            </div>\r\n                        </div>\r\n                        <nav className={styles.list}>\r\n                            <Link to={`profile/${auth.userId}`} className={`${styles.btn} ${styles.border}`}>\r\n                                <span className={styles.text}>Mon profil</span>\r\n                                <img className={`${styles.icon} icon_white`} src={person} alt=\"\" />\r\n                            </Link>\r\n                            {navLinks}\r\n                            <Link to=\"/posts\" className={`${styles.btn} ${styles.border}`}>\r\n                                <span className={styles.text}>Annuaire</span>\r\n                                <img className={`${styles.icon} icon_white`} src={agenda} alt=\"\" />\r\n                            </Link>\r\n                            <button className={`${styles.btn} ${styles.logout_margin}`} onClick={logoutHandler}>\r\n                                <span className={styles.text}>Se déconnecter</span>\r\n                                <img className={`${styles.icon} icon_white`} src={logout} alt=\"\" />\r\n                            </button>\r\n                        </nav>\r\n                    </div>\r\n                )}\r\n            </>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Components\r\nimport Nav from \"../../components/Nav/Nav\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\n// Styles\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = (props) => {\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // App path\r\n    const path = props.location.pathname;\r\n\r\n    const mobileLayout = (\r\n        <>\r\n            <main className=\"home_wrapper\">{props.children}</main>\r\n            <Nav />\r\n        </>\r\n    );\r\n\r\n    const desktopLayout = (\r\n        <>\r\n            <div className=\"desktop_wrap\">\r\n                <Menu />\r\n                <main className=\"wrapper\">{props.children}</main>\r\n            </div>\r\n            <p className=\"disclaimer\">\r\n                Plan du site © Groupomania 2020. La Societé ne prend aucune responsabilité légale sur les publications\r\n                faites par ses employés.\r\n            </p>\r\n        </>\r\n    );\r\n\r\n    // Mobile Layout\r\n    if (width <= 1023) {\r\n        return mobileLayout;\r\n    }\r\n\r\n    // Desktop Layout\r\n    if (width >= 1024) {\r\n        switch (path) {\r\n            case `${process.env.GITHUB_URL}/`:\r\n                return mobileLayout;\r\n            // break;\r\n            case `${process.env.GITHUB_URL}/login`:\r\n                return mobileLayout;\r\n            // break;\r\n            case `${process.env.GITHUB_URL}/signup`:\r\n                return mobileLayout;\r\n            // break;\r\n            default:\r\n                return desktopLayout;\r\n        }\r\n    }\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\n\r\n// Static Images\r\nimport logo from \"../../images/logo.png\";\r\n\r\n// Styles\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"background_image\">\r\n            <img src={logo} className=\"logo\" alt=\"Logo de Groupomania, entreprise de grande distribution européenne\" />\r\n            <div className=\"welcome\">\r\n                <h3 className=\"title\">Bienvenue</h3>\r\n                <p className=\"message\">sur le réseau social pour partager avec vos collègues !</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    // gestion de la action\r\n    switch (action.type) {\r\n        case \"INPUT_CHANGE\":\r\n            let formIsValid = true;\r\n            // Validation pour chaque objet html, il valide avec l'id et le changement d'état de l'objet\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            // Après, il crée une copie de l'état précédent et ajoutes le nouveau état\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid },\r\n                },\r\n                isValid: formIsValid,\r\n            };\r\n        case \"SET_DATA\":\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Composant\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    // Fonction pour établir l'état initiale des objets html et envoie les donnés à formState\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity,\r\n    });\r\n\r\n    // Fonction pour capturer les valeurs des objets html et envoie les donnés à formState\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: \"INPUT_CHANGE\",\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id,\r\n        });\r\n    }, []);\r\n\r\n    // Fonction pour reinitialiser le formState des objets html et envoie les donnés à formState\r\n    const setFormState = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: \"SET_DATA\",\r\n            inputs: inputData,\r\n            formIsValid: formValidity,\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormState];\r\n};\r\n","const REQUIRED = \"REQUIRED\";\r\nconst MINLENGTH = \"MINLENGTH\";\r\nconst MAXLENGTH = \"MAXLENGTH\";\r\nconst MIN = \"MIN\";\r\nconst MAX = \"MAX\";\r\nconst EMAIL = \"EMAIL\";\r\nconst FILE = \"FILE\";\r\nconst TEXT = \"TEXT\";\r\n\r\nexport const isRequired = () => ({ type: REQUIRED });\r\nexport const isFile = () => ({ type: FILE });\r\n\r\nexport const MinLength = (val) => ({\r\n    type: MINLENGTH,\r\n    val: val,\r\n});\r\n\r\nexport const MaxLength = (val) => ({\r\n    type: MAXLENGTH,\r\n    val: val,\r\n});\r\n\r\nexport const isMin = (val) => ({ type: MIN, val: val });\r\n\r\nexport const isMax = (val) => ({ type: MAX, val: val });\r\n\r\nexport const isText = () => ({ type: TEXT });\r\n\r\nexport const isEmail = () => ({ type: EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n\r\n    for (const validator of validators) {\r\n        if (validator.type === REQUIRED) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n\r\n        if (validator.type === MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.val;\r\n        }\r\n\r\n        if (validator.type === MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.val;\r\n        }\r\n\r\n        if (validator.type === MIN) {\r\n            isValid = isValid && +value >= validator.val;\r\n        }\r\n\r\n        if (validator.type === MAX) {\r\n            isValid = isValid && +value <= validator.val;\r\n        }\r\n\r\n        if (validator.type === TEXT) {\r\n            isValid = isValid && /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ '-]+$/i.test(value);\r\n        }\r\n\r\n        if (validator.type === EMAIL) {\r\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n        }\r\n    }\r\n\r\n    return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../utils/validators\";\r\n\r\n// Styles\r\nimport styles from \"./InputField.module.css\";\r\n\r\n// En fonction de l'etat de l'objet html (change = ecriture / touch = utilisateur change de champ)\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE\":\r\n            return {\r\n                // coppier tous les valeurs d'avant et ajoute le nouveau événement (une lettre par exemple)\r\n                ...state,\r\n                value: action.val,\r\n                // changer la validation en fonction des validateurs de l'objet html\r\n                isValid: validate(action.val, action.validators),\r\n            };\r\n        case \"TOUCH\": {\r\n            return {\r\n                ...state,\r\n                isTouched: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Component\r\nconst InputField = (props) => {\r\n    // état initielle du composant\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || \"\",\r\n        isTouched: false,\r\n        isValid: props.initialValid || false,\r\n    });\r\n\r\n    // déconstruction de props et inputState\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    // id du composant, la valeur capturée et sa validation de donnés\r\n    useEffect(() => {\r\n        onInput(id, value, isValid);\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    // Fonction pour capturer le changement de l'état du composant (écriture)\r\n    const changeHandler = (event) => {\r\n        dispatch({\r\n            type: \"CHANGE\",\r\n            val: event.target.value,\r\n            validators: props.validators,\r\n        });\r\n    };\r\n\r\n    // Fonction pour capturer le changement de l'état du composant (changer de champ)\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: \"TOUCH\",\r\n        });\r\n    };\r\n\r\n    // Validation visuelle et type d'objet html (input/textarea)\r\n    let typeOfBox;\r\n    let borderColor;\r\n\r\n    if (props.textIsWhite === \"yes\") {\r\n        typeOfBox = styles.white_box;\r\n        borderColor = styles.border_white;\r\n    } else {\r\n        typeOfBox = styles.box;\r\n        borderColor = \"\";\r\n    }\r\n\r\n    // si on souhaite un champ label\r\n    const label = props.label ? (\r\n        <label className={styles.label} htmlFor={props.id}>\r\n            {props.label}\r\n        </label>\r\n    ) : null;\r\n\r\n    // si on souhaite un icône à coté du champ\r\n    let icon;\r\n\r\n    if (props.icon && props.textIsWhite === \"yes\") {\r\n        icon = <img className={`${styles.icon} icon_white`} src={props.icon} alt={props.alt} />;\r\n    } else if (props.icon) {\r\n        icon = <img className={styles.icon} src={props.icon} alt={props.alt} />;\r\n    } else {\r\n        icon = \"\";\r\n    }\r\n\r\n    const element =\r\n        props.element === \"input\" ? (\r\n            <input\r\n                id={props.id}\r\n                className={`${typeOfBox} ${styles.input_height} `}\r\n                name={props.name}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                autoComplete={props.autocomplete}\r\n                value={inputState.value}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n            ></input>\r\n        ) : (\r\n            <textarea\r\n                id={props.id}\r\n                className={`${typeOfBox} ${styles.textarea}`}\r\n                name={props.name}\r\n                type={props.type}\r\n                rows={props.rows || 3}\r\n                placeholder={props.placeholder}\r\n                autoComplete={props.autocomplete}\r\n                value={inputState.value}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`${styles.block} ${borderColor}\r\n        ${!inputState.isValid && inputState.isTouched && styles.invalid}`}\r\n            >\r\n                {label}\r\n                <div className={styles.wrapper}>\r\n                    {element}\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n            {!inputState.isValid && inputState.isTouched && <p className={styles.input_error}>{props.errorText}</p>}\r\n        </>\r\n    );\r\n    // });\r\n};\r\n\r\nexport default InputField;\r\n","import React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { isEmail, MinLength } from \"../../utils/validators\";\r\n\r\n// Static Images\r\nimport logo from \"../../images/logo.png\";\r\n\r\n// Icons\r\nimport password from \"../../images/password-icon.svg\";\r\nimport person from \"../../images/person-icon.svg\";\r\n\r\n// Components\r\nimport InputField from \"../../components/InputField/InputField\";\r\n\r\n// Styles\r\nimport \"../Home/Home.css\";\r\n\r\nconst Login = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // Request Hook\r\n    const { error, sendRequest } = useHttpRequest();\r\n\r\n    // Input Hook\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            email: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    const loginHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const data = {\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value,\r\n            };\r\n\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/login`,\r\n                \"POST\",\r\n                JSON.stringify(data),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            );\r\n            auth.login(responseData.userId, responseData.token, responseData.account);\r\n            history.push(\"/posts\");\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"background_image\">\r\n                <img\r\n                    src={logo}\r\n                    className=\"logo\"\r\n                    alt=\"Logo de Groupomania, entreprise de grande distribution européenne\"\r\n                />\r\n                <form id=\"login-form\" className=\"input_list\" onSubmit={loginHandler}>\r\n                    <InputField\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        onInput={inputHandler}\r\n                        placeholder=\"email\"\r\n                        autocomplete=\"email\"\r\n                        icon={person}\r\n                        alt=\"email icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[isEmail(), MinLength(6)]}\r\n                        errorText=\"Votre email n'est pas correct\"\r\n                        initialValue={formState.inputs.email.value}\r\n                        initialValid={formState.inputs.email.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onInput={inputHandler}\r\n                        placeholder=\"mot de passe\"\r\n                        autocomplete=\"current-password\"\r\n                        icon={password}\r\n                        alt=\"password icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(8)]}\r\n                        errorText=\"Votre mot de passe n'est pas correct\"\r\n                        initialValue={formState.inputs.password.value}\r\n                        initialValid={formState.inputs.password.isValid}\r\n                    />\r\n                </form>\r\n                <p className=\"error_message\">{error}</p>\r\n                <Link className=\"forgot_pass_link\" to={\"/login\"}>\r\n                    mot de passe oublié ?\r\n                </Link>\r\n            </div>\r\n            <div className=\"background_blur\"></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { isEmail, MinLength, isText } from \"../../utils/validators\";\r\n\r\n// Static Images\r\nimport logo from \"../../images/logo.png\";\r\n\r\n// Icons\r\nimport lastname from \"../../images/lastname-icon.svg\";\r\nimport password from \"../../images/password-icon.svg\";\r\nimport person from \"../../images/person-icon.svg\";\r\nimport email from \"../../images/email-icon.svg\";\r\n\r\n// Components\r\nimport InputField from \"../../components/InputField/InputField\";\r\n\r\n// Styles\r\nimport \"../../containers/Home/Home.css\";\r\nimport styles from \"./Signup.module.css\";\r\n\r\nconst SignUp = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            firstName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            lastName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            email: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    // Request Hook\r\n    const { error, sendRequest } = useHttpRequest();\r\n\r\n    const signupHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const data = {\r\n                firstName: formState.inputs.firstName.value,\r\n                lastName: formState.inputs.lastName.value.toUpperCase(),\r\n                email: formState.inputs.email.value,\r\n                password: formState.inputs.password.value,\r\n            };\r\n\r\n            const responseData = await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/signup`,\r\n                \"POST\",\r\n                JSON.stringify(data),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            );\r\n            auth.login(responseData.userId, responseData.token, responseData.account);\r\n            history.push(\"/posts\");\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"background_image\">\r\n                <img src={logo} className=\"logo\" alt=\"Logo de Groupomania, entreprise de grand distribution européen\" />\r\n                <form id=\"signup-form\" className={styles.input_list} onSubmit={signupHandler}>\r\n                    <InputField\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        placeholder=\"prénom\"\r\n                        autocomplete=\"given-name\"\r\n                        icon={person}\r\n                        alt=\"first name icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(2), isText()]}\r\n                        errorText=\"Veuillez rentrer uniquement des lettres\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.firstName.value}\r\n                        initialValid={formState.inputs.firstName.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        placeholder=\"nom\"\r\n                        autocomplete=\"family-name\"\r\n                        icon={lastname}\r\n                        alt=\"last name icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(2), isText()]}\r\n                        errorText=\"Veuillez rentrer uniquement des lettres\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.lastName.value}\r\n                        initialValid={formState.inputs.lastName.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"email\"\r\n                        autocomplete=\"email\"\r\n                        icon={email}\r\n                        alt=\"email icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[isEmail(), MinLength(6)]}\r\n                        errorText=\"Votre email n'est pas correct\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.email.value}\r\n                        initialValid={formState.inputs.email.isValid}\r\n                    />\r\n                    <InputField\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"mot de passe\"\r\n                        autocomplete=\"current-password\"\r\n                        icon={password}\r\n                        alt=\"password icon\"\r\n                        element=\"input\"\r\n                        hasLabel=\"no\"\r\n                        textIsWhite=\"yes\"\r\n                        validators={[MinLength(8)]}\r\n                        errorText=\"Minimum une majuscule, un chiffre et 8 lettres\"\r\n                        onInput={inputHandler}\r\n                        initialValue={formState.inputs.password.value}\r\n                        initialValid={formState.inputs.password.isValid}\r\n                    />\r\n                </form>\r\n                <p className=\"error_message\">{error}</p>\r\n            </div>\r\n            <div className=\"background_blur\"></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./TabBtn.module.css\";\r\n\r\n/*\r\nAttends ==>\r\n\r\n<TabBtn \r\n    name={texte du bouton}\r\n    onClick={fonction onClick}\r\n    icon={icon-name}\r\n/>\r\n\r\n*/\r\n\r\nconst TabBtn = (props) => {\r\n    let btn;\r\n\r\n    if (props.active === \"active\") {\r\n        btn = (\r\n            <button className={styles.btn_active} onClick={props.onClick}>\r\n                <div className={styles.container_active}>\r\n                    <span className={styles.text_active}>{props.name}</span>\r\n                    <img className={styles.icon_active} src={props.icon} alt=\"\" />\r\n                </div>\r\n            </button>\r\n        );\r\n    } else {\r\n        btn = (\r\n            <button className={styles.btn} onClick={props.onClick}>\r\n                <div className={styles.container}>\r\n                    <span className={styles.text}>{props.name}</span>\r\n                    <img className={styles.icon} src={props.icon} alt=\"\" />\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    return <>{btn}</>;\r\n};\r\n\r\nexport default TabBtn;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Icons\r\nimport like from \"../../../images/like-icon.svg\";\r\nimport dislike from \"../../../images/dislike-icon.svg\";\r\nimport comment from \"../../../images/comment-icon.svg\";\r\nimport comments from \"../../../images/comments-icon.svg\";\r\n\r\n// Styles\r\nimport styles from \"./ReactionBtn.module.css\";\r\n\r\n/*\r\nAttend ==>\r\n\r\n<ReactionBtn \r\n    btnType=\"functional, link, decor\" \r\n    link={props.link} \r\n    reaction={props.userReaction === \"like\" || \"dislike\" ? \"like\" || \"dislike\" : null} icon=\"\" text={props.text} \r\n    onCLick={props.onClick} \r\n    styling=\"Herited styles\"\r\n/>\r\n\r\n*/\r\n\r\nconst ReactionBtn = (props) => {\r\n    // Couleur du bouton like/dislike en fonction de la reaction de l'utilisateur\r\n    let reactionColor = \"\";\r\n\r\n    switch (props.reaction) {\r\n        case \"like\":\r\n            reactionColor = \"icon_green\";\r\n            break;\r\n        case \"dislike\":\r\n            reactionColor = \"icon_red\";\r\n            break;\r\n        case null:\r\n            reactionColor = \"\";\r\n            break;\r\n        default:\r\n            console.log(\"Something went wrong with reactionColor in ReactionBtn Component\");\r\n    }\r\n\r\n    // Type d'icône à montrer\r\n    let icon;\r\n    switch (props.icon) {\r\n        case \"like\":\r\n            icon = like;\r\n            break;\r\n        case \"dislike\":\r\n            icon = dislike;\r\n            break;\r\n        case \"comment\":\r\n            icon = comment;\r\n            break;\r\n        case \"comments\":\r\n            icon = comments;\r\n            break;\r\n        default:\r\n            console.log(\"Something went wrong with icon in ReactionBtn Component\");\r\n    }\r\n\r\n    // Type de bouton à montrer\r\n    let btn;\r\n    switch (props.btnType) {\r\n        case \"functional\":\r\n            btn = (\r\n                <button\r\n                    name={props.name}\r\n                    className={`${styles.reaction_btn} ${props.styling}`}\r\n                    onClick={props.onReaction}\r\n                >\r\n                    <img className={`${styles.icon} ${reactionColor}`} src={icon} alt=\"\" />\r\n                    <span>{props.text}</span>\r\n                </button>\r\n            );\r\n            break;\r\n        case \"link\":\r\n            btn = (\r\n                <Link to={props.link} className={`${styles.reaction_btn} ${props.styling}`}>\r\n                    <img className={`${styles.icon} ${reactionColor}`} src={icon} alt=\"\" />\r\n                    <span>{props.text}</span>\r\n                </Link>\r\n            );\r\n            break;\r\n        case \"decor\":\r\n            btn = (\r\n                <div className={`${styles.reaction_btn} ${props.styling}`}>\r\n                    <img className={`${styles.icon} ${reactionColor}`} src={icon} alt=\"\" />\r\n                    <span>{props.text}</span>\r\n                </div>\r\n            );\r\n            break;\r\n        default:\r\n            console.log(\"Something went wrong with btn in ReactionBtn Component\");\r\n    }\r\n\r\n    return <>{btn}</>;\r\n};\r\n\r\nexport default ReactionBtn;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Static Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Icons\r\nimport DeleteX from \"../../images/x-icon.svg\";\r\n\r\n// Styles\r\nimport styles from \"./UserHeader.module.css\";\r\nconst UserHeader = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Format de la date de la publication en sec, min, heurs, jours et années\r\n    const postDate = new Date(props.date);\r\n    const today = new Date();\r\n    const diffTime = Math.abs(today - postDate);\r\n\r\n    let newPostDate;\r\n\r\n    if (diffTime <= 6000) {\r\n        const formatDate = Math.ceil(diffTime / 1000) + \" s\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 60000) {\r\n        const formatDate = Math.ceil(diffTime / (1000 * 60)) + \" m\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 3600000) {\r\n        const formatDate = Math.ceil(diffTime / (1000 * 60 * 60)) + \" h\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 216000000) {\r\n        const formatDate = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + \" j\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    if (diffTime >= 189216000000) {\r\n        const formatDate = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 365)) + \" a\";\r\n        newPostDate = formatDate;\r\n    }\r\n\r\n    // Changer l'affichage selon la page posts ou comments\r\n    let category;\r\n\r\n    if (props.category) {\r\n        category = (\r\n            <>\r\n                <span className={styles.text_division}>|</span>\r\n                <span>{props.category}</span>\r\n            </>\r\n        );\r\n    } else {\r\n        category = \"\";\r\n    }\r\n\r\n    // verification admin pour montrer le bouton de supprimer post/comment\r\n    let deleteBtn;\r\n\r\n    if (auth.userId === props.UserId || auth.account === \"admin\") {\r\n        deleteBtn = (\r\n            <button className={styles.delete_btn} onClick={props.onDelete}>\r\n                <img className={styles.delete_icon} src={DeleteX} alt=\"delete icon\" />\r\n            </button>\r\n        );\r\n    } else {\r\n        deleteBtn = \"\";\r\n    }\r\n\r\n    return (\r\n        <header className={styles.block}>\r\n            <Link to={`/profile/${props.UserId}`}>\r\n                <img\r\n                    className={styles.photo}\r\n                    src={props.photo_url || GenProfile}\r\n                    alt={`${props.firstName} ${props.lastName}`}\r\n                />\r\n                {props.firstName} {props.lastName}\r\n            </Link>\r\n            <p className={styles.text}>\r\n                {category}\r\n                <span className={styles.text_division}>•</span>\r\n                <span>{newPostDate}</span>\r\n            </p>\r\n            {deleteBtn}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default UserHeader;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\n// Components\r\nimport ReactionBtn from \"../../components/Buttons/ReactionBtn/ReactionBtn\";\r\nimport UserHeader from \"../UserHeader/UserHeader\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./Post.module.css\";\r\n\r\n// manejar el useState de manera local para los likes\r\n\r\nconst Post = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Request Hook\r\n    const { isLoading, sendRequest } = useHttpRequest();\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // App Location\r\n    const path = props.location.pathname;\r\n    const postId = props.location.pathname.split(\"/\")[2];\r\n\r\n    // User Likes\r\n    const [likesCounter, setLikesCounter] = useState(props.likes);\r\n\r\n    // User Dislikes\r\n    const [dislikesCounter, setDislikesCounter] = useState(props.dislikes);\r\n\r\n    // User's reaction to post\r\n    const [userReaction, setUserReaction] = useState(props.userReaction);\r\n\r\n    // Reaction status\r\n    const [hasReacted, setHasReacted] = useState(props.userReaction === null ? false : true);\r\n\r\n    // Reaction Handler\r\n    const userReactionHandler = async (event) => {\r\n        event.preventDefault();\r\n        let reaction;\r\n\r\n        switch (userReaction) {\r\n            case null:\r\n                if (event.currentTarget.name === \"like\") {\r\n                    setLikesCounter((currLikesCounter) => currLikesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                } else {\r\n                    setDislikesCounter((currDislikesCounter) => currDislikesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n                setUserReaction(event.currentTarget.name);\r\n                setHasReacted(true);\r\n\r\n                break;\r\n\r\n            case \"null\":\r\n                if (event.currentTarget.name === \"like\") {\r\n                    setLikesCounter((currLikesCounter) => currLikesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                } else {\r\n                    setDislikesCounter((currDislikesCounter) => currDislikesCounter + 1);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n                setUserReaction(event.currentTarget.name);\r\n\r\n                break;\r\n\r\n            case \"like\":\r\n                if (event.currentTarget.name === \"like\") {\r\n                    setLikesCounter((currLikesCounter) => currLikesCounter - 1);\r\n                    setUserReaction(\"null\");\r\n                    reaction = \"null\";\r\n                } else {\r\n                    setLikesCounter((currLikesCounter) => currLikesCounter - 1);\r\n                    setDislikesCounter((currDislikesCounter) => currDislikesCounter + 1);\r\n                    setUserReaction(event.currentTarget.name);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n\r\n                break;\r\n\r\n            case \"dislike\":\r\n                if (event.currentTarget.name === \"dislike\") {\r\n                    setDislikesCounter((currDislikesCounter) => currDislikesCounter - 1);\r\n                    setUserReaction(\"null\");\r\n                    reaction = \"null\";\r\n                } else {\r\n                    setLikesCounter((currLikesCounter) => currLikesCounter + 1);\r\n                    setDislikesCounter((currDislikesCounter) => currDislikesCounter - 1);\r\n                    setUserReaction(event.currentTarget.name);\r\n                    reaction = event.currentTarget.name;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                console.log(\"an error was produced in userReactionHandler function on post component\");\r\n                break;\r\n        }\r\n\r\n        await fetch(`${process.env.REACT_APP_API_URL}/posts/reaction`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\", Authorization: \"Bearer \" + auth.token },\r\n            body: JSON.stringify({\r\n                PostId: props.id,\r\n                reaction: reaction,\r\n                reacted: hasReacted,\r\n            }),\r\n        }).catch((err) => console.log(err));\r\n    };\r\n\r\n    // Delete Post\r\n    const DeletePostHandler = async () => {\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/posts/${props.id}`,\r\n                \"DELETE\",\r\n                JSON.stringify({ image_url: props.image_url }),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n            if (path === `/posts/${postId}`) {\r\n                history.push(`/posts`);\r\n            } else {\r\n                props.onDelete(props.id);\r\n            }\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Type de visualisation sur Posts et Comment Post\r\n    let commentBlock;\r\n\r\n    if (props.location.pathname === \"/posts\") {\r\n        commentBlock = (\r\n            <>\r\n                <ReactionBtn btnType=\"decor\" icon=\"comments\" text={props.comments} styling=\"\" reaction={null} />\r\n                <ReactionBtn\r\n                    btnType=\"link\"\r\n                    link={props.post_link}\r\n                    reaction={null}\r\n                    icon=\"comment\"\r\n                    text=\"commenter\"\r\n                    styling={styles.comment_btn}\r\n                />\r\n            </>\r\n        );\r\n    } else {\r\n        commentBlock = (\r\n            <ReactionBtn\r\n                btnType=\"decor\"\r\n                icon=\"comments\"\r\n                text={props.comments}\r\n                styling={styles.push_right}\r\n                reaction={null}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <article id={props.id}>\r\n            {isLoading && (\r\n                <div className=\"spinner\">\r\n                    <Spinner asOverlay />\r\n                </div>\r\n            )}\r\n            <UserHeader\r\n                UserId={props.UserId}\r\n                photo_url={props.photo_url}\r\n                firstName={props.firstName}\r\n                lastName={props.lastName}\r\n                date={props.date}\r\n                category={props.category}\r\n                onDelete={DeletePostHandler}\r\n            />\r\n            <section className={styles.block}>\r\n                <h3 className={styles.title}>{props.title}</h3>\r\n                <img className={styles.photo} src={props.image_url} alt=\"post\" />\r\n                <footer className={styles.reactions}>\r\n                    <ReactionBtn\r\n                        btnType=\"functional\"\r\n                        name=\"like\"\r\n                        onReaction={userReactionHandler}\r\n                        reaction={userReaction === \"like\" ? \"like\" : null}\r\n                        icon=\"like\"\r\n                        text={likesCounter}\r\n                        styling=\"\"\r\n                    />\r\n                    <ReactionBtn\r\n                        btnType=\"functional\"\r\n                        name=\"dislike\"\r\n                        onReaction={userReactionHandler}\r\n                        reaction={userReaction === \"dislike\" ? \"dislike\" : null}\r\n                        icon=\"dislike\"\r\n                        text={dislikesCounter}\r\n                        styling=\"\"\r\n                    />\r\n                    {commentBlock}\r\n                </footer>\r\n            </section>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default withRouter(Post);\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Post from \"../../components/Post/Post\";\r\n\r\n// Styles\r\nimport styles from \"./PostList.module.css\";\r\n\r\nconst PostList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <h2>No Posts Created</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.items.map((post) => {\r\n                return (\r\n                    <Post\r\n                        key={post.PostId}\r\n                        id={post.PostId}\r\n                        UserId={post.UserId}\r\n                        photo_url={post.photo_url}\r\n                        firstName={post.firstName}\r\n                        lastName={post.lastName}\r\n                        date={post.post_date}\r\n                        category={post.category}\r\n                        title={post.title}\r\n                        image_url={post.image_url}\r\n                        likes={post.likes}\r\n                        dislikes={post.dislikes}\r\n                        comments={post.comments}\r\n                        userReaction={post.userReaction}\r\n                        post_link={`/posts/${post.PostId}`}\r\n                        onDelete={props.onDeletePost}\r\n                    />\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Icons\r\nimport clockIcon from \"../../images/clock-icon.svg\";\r\nimport coffeeIcon from \"../../images/coffee-icon.svg\";\r\nimport postIcon from \"../../images/post-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport TabBtn from \"../../components/Buttons/TabBtn/TabBtn\";\r\nimport PostList from \"../../components/PostList/PostList\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./Posts.module.css\";\r\n\r\nconst Posts = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    //Posts State\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    // Tab Btn State\r\n    const [activeBtn, setActiveBtn] = useState({\r\n        mostRecents: \"active\",\r\n        mostLiked: \"\",\r\n    });\r\n\r\n    // Fetch Initial\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const initData = await sendRequest(`${process.env.REACT_APP_API_URL}/posts`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n                setPosts(initData);\r\n            } catch (err) {}\r\n        };\r\n        fetchPosts();\r\n    }, [sendRequest, auth.token]);\r\n\r\n    // Fetch Most recent posts\r\n    const fetchMostRecent = async () => {\r\n        setPosts([]);\r\n        try {\r\n            const postsData = await sendRequest(`${process.env.REACT_APP_API_URL}/posts`, \"GET\", null, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            setPosts(postsData);\r\n            setActiveBtn({\r\n                mostRecents: \"active\",\r\n                mostLiked: \"\",\r\n            });\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Fetch Most liked posts\r\n    const fetchMostLiked = async () => {\r\n        setPosts([]);\r\n        try {\r\n            const mostLikedData = await sendRequest(`${process.env.REACT_APP_API_URL}/posts/most-liked`, \"GET\", null, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            setPosts(mostLikedData);\r\n            setActiveBtn({\r\n                mostRecents: \"\",\r\n                mostLiked: \"active\",\r\n            });\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Delete POST Handler\r\n    const deletePostHandler = (deletedPostId) => {\r\n        setPosts((prevPosts) => prevPosts.filter((post) => post.PostId !== deletedPostId));\r\n    };\r\n\r\n    // Affichage menu post en desktop\r\n    let newPost;\r\n\r\n    if (width >= 1024) {\r\n        newPost = (\r\n            <Link to={`posts/new`} className={styles.btn}>\r\n                <span className={styles.text}>NOUVEAU POST</span>\r\n                <img className={styles.icon} src={postIcon} alt=\"\" />\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <nav className={styles.header}>\r\n                <TabBtn name=\"À LA UNE\" icon={clockIcon} active={activeBtn.mostRecents} onClick={fetchMostRecent} />\r\n                <TabBtn name=\"LES PLUS AIMÉS\" icon={coffeeIcon} active={activeBtn.mostLiked} onClick={fetchMostLiked} />\r\n                {newPost}\r\n            </nav>\r\n            <div className=\"container\">\r\n                {isLoading && (\r\n                    <div className=\"spinner\">\r\n                        <Spinner />\r\n                    </div>\r\n                )}\r\n                {!isLoading && activeBtn && posts && <PostList items={posts} onDeletePost={deletePostHandler} />}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n\r\n// Static Images\r\nimport logotype from \"../../images/logotype.svg\";\r\n\r\n// Styles\r\nimport styles from \"./Counter.module.css\";\r\n\r\nconst Counter = (props) => {\r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.counter}>\r\n                <h5 className={styles.title}>Publications</h5>\r\n                <span className={styles.count}>{props.postsCount}</span>\r\n                <p className={styles.text}>par vous</p>\r\n            </div>\r\n\r\n            <img className={styles.logotype} src={logotype} alt=\"Logo de Groupomania\" />\r\n\r\n            <div className={styles.counter}>\r\n                <h5 className={styles.title}>Aimées par</h5>\r\n                <span className={styles.count}>{props.likesCount}</span>\r\n                <p className={styles.text}>vos collègues</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Static Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Icons\r\nimport LinkedinIcon from \"../../images/linkedin-icon.svg\";\r\nimport LinkedinGreyIcon from \"../../images/linkedin-grey-icon.svg\";\r\nimport modify from \"../../images/modify-icon.svg\";\r\nimport back from \"../../images/back-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\nimport Counter from \"../../components/Counter/Counter\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./UserProfile.module.css\";\r\n\r\nconst UserProfile = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    //Profile Hook\r\n    const [profileData, setProfileData] = useState();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // Id de l'utilisateur à afficher\r\n    const userId = Number(useParams().id);\r\n\r\n    // Fetch l'utilisateur à afficher\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const userData = await sendRequest(`${process.env.REACT_APP_API_URL}/profile/${userId}`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n\r\n                setProfileData(userData);\r\n            } catch (err) {}\r\n        };\r\n        fetchUser();\r\n    }, [sendRequest, auth.token, userId]);\r\n\r\n    let btnStyle = styles.btnStyle;\r\n    let iconStyle = `${styles.iconStyle} icon_red`;\r\n    let desktopNav;\r\n\r\n    // Affichage Nav Desktop\r\n    if (width >= 1024) {\r\n        desktopNav = (\r\n            <nav className={styles.nav}>\r\n                <NavBtn\r\n                    id=\"back\"\r\n                    name=\"retourner\"\r\n                    icon={back}\r\n                    link=\"/posts\"\r\n                    btnStyle={btnStyle}\r\n                    iconColor={iconStyle}\r\n                />\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    // Validation Affichage Nav Desktop si l'utilisateur c'est le même qui s'affiche\r\n    if (width >= 1024) {\r\n        if (auth.userId === userId) {\r\n            desktopNav = (\r\n                <nav className={styles.nav}>\r\n                    <NavBtn\r\n                        id=\"back\"\r\n                        name=\"retourner\"\r\n                        icon={back}\r\n                        link=\"/posts\"\r\n                        btnStyle={btnStyle}\r\n                        iconColor={iconStyle}\r\n                    />\r\n                    <NavBtn\r\n                        id=\"update-profile\"\r\n                        name=\"Modifier\"\r\n                        icon={modify}\r\n                        link={`/profile/${auth.userId}/update`}\r\n                        btnStyle={btnStyle}\r\n                        iconColor={iconStyle}\r\n                    />\r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!profileData) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <div className={`container ${styles.class_mod}`}>\r\n                {!isLoading && profileData && (\r\n                    <>\r\n                        <div className={styles.background_img}></div>\r\n                        <div className={styles.wrapper}>\r\n                            <img\r\n                                src={profileData.photo_url || GenProfile}\r\n                                className={styles.profile_photo}\r\n                                alt={`${profileData.firstName} ${profileData.lastName}, employé chez groupomania.`}\r\n                            />\r\n                            <div className={styles.hero_block}>\r\n                                <h2 className={styles.title}>\r\n                                    {profileData.firstName} {profileData.lastName}\r\n                                </h2>\r\n                                {profileData.linkedin_url ? (\r\n                                    <a href={profileData.linkedin_url} rel=\"noopener\">\r\n                                        <img\r\n                                            className={styles.Linkedin_icon}\r\n                                            src={LinkedinIcon}\r\n                                            alt=\"Logo du reseaux social linkedin\"\r\n                                        />\r\n                                    </a>\r\n                                ) : (\r\n                                    <img\r\n                                        className={styles.Linkedin_icon}\r\n                                        src={LinkedinGreyIcon}\r\n                                        alt=\"Logo du reseaux social linkedin\"\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <p className={styles.department}>{profileData.department}</p>\r\n                            <p className={styles.role}>{profileData.role}</p>\r\n                            <a className={styles.email} href={`mailto:${profileData.email}`}>\r\n                                {profileData.email}\r\n                            </a>\r\n                            <Counter\r\n                                likesCount={profileData.likesCount || 0}\r\n                                postsCount={profileData.postsCount || 0}\r\n                            />\r\n                            {desktopNav}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\n\r\n// Icons\r\nimport ok from \"../../images/ok-icon.svg\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport UIBtn from \"../Buttons/UIBtn/UIBtn\";\r\n\r\n// Styles\r\nimport styles from \"./ConfirmModal.module.css\";\r\n\r\nconst ConfirmModal = (props) => {\r\n    return (\r\n        <Modal\r\n            show={props.show}\r\n            onCancel={props.onCancel}\r\n            // header=\"titre du modal\"\r\n            footer={\r\n                <UIBtn\r\n                    id=\"accept-btn\"\r\n                    name=\"Ok\"\r\n                    type=\"submit\"\r\n                    btnType=\"warning\"\r\n                    onClick={props.onCancel}\r\n                    buttonClass={styles.btn}\r\n                />\r\n            }\r\n        >\r\n            <img className={`${styles.okIcon} icon_green`} src={ok} alt=\"\" />\r\n            <p>{props.message}</p>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Icons\r\nimport Image from \"../../images/image-icon.svg\";\r\n\r\n// Images\r\nimport GenProfile from \"../../images/generic_profile_picture.jpg\";\r\n\r\n// Styles\r\nimport styles from \"./ImageUpload.module.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n    // Use state de l'image\r\n    const [file, setFile] = useState();\r\n\r\n    // Use state de la previsualisation de l'image\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n\r\n    // Use state de la validation\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    // Localisation actuelle de l'app\r\n    const path = props.location.pathname;\r\n\r\n    useEffect(() => {\r\n        // verification s'il y a une image ou pas dans le useState\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        // Accéder à la previsualisation de l'image du navigateur et le transferer au useState\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    // Fontion qui prend l'image\r\n    const pickedImageHandler = (event) => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n\r\n        // S'il y a une image dans l'événement\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    // Construction pour la page new post\r\n    if (path === \"/posts/new\") {\r\n        return (\r\n            <>\r\n                <label htmlFor=\"upload-button\" className={styles.image_container}>\r\n                    {previewUrl ? (\r\n                        <>\r\n                            <img\r\n                                className={styles.preview_post}\r\n                                src={previewUrl}\r\n                                alt=\"Prévisualisation de la publication\"\r\n                            />\r\n                            <div className={styles.red_banner_post}>\r\n                                <span className={styles.banner_text_post}>changer l'image</span>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <div className={styles.icon_block}>\r\n                            <img className={styles.icon} src={Image} alt=\"\" />\r\n                            <span className={styles.text}>Veuillez choisir une image en cliquant ici</span>\r\n                        </div>\r\n                    )}\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\".jpeg,.jpg,.gif\"\r\n                    id=\"upload-button\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={pickedImageHandler}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    // Construction pour la page Update Profile\r\n    return (\r\n        <>\r\n            <label htmlFor=\"upload-button\" className={styles.photo_container}>\r\n                {previewUrl ? (\r\n                    <>\r\n                        <img className={styles.preview_img} src={previewUrl} alt=\"Prévisualisation du profil\" />\r\n\r\n                        <div className={styles.red_banner}>\r\n                            <span className={styles.banner_text}>changer</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div>\r\n                        <img className={styles.profile_photo} src={props.photo_url || GenProfile} alt=\"\" />\r\n                        <div className={styles.red_banner}>\r\n                            <span className={styles.banner_text}>changer</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".jpeg,.jpg\"\r\n                id=\"upload-button\"\r\n                style={{ display: \"none\" }}\r\n                onChange={pickedImageHandler}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(ImageUpload);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { isEmail, MinLength, MaxLength, isText } from \"../../utils/validators\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\n\r\n// Icons\r\nimport password from \"../../images/password-icon.svg\";\r\nimport back from \"../../images/back-icon.svg\";\r\nimport deleteIcon from \"../../images/delete-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport ConfirmModal from \"../../components/ConfirmModal/ConfirmModal\";\r\nimport NavBtn from \"../../components/Buttons/NavBtn/NavBtn\";\r\nimport UIBtn from \"../../components/Buttons/UIBtn/UIBtn\";\r\nimport ImageUpload from \"../../components/ImageUpload/ImageUpload\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./UpdateProfile.module.css\";\r\n\r\nconst UpdateProfile = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    // Profile useState\r\n    const [userDataState, setUserDataState] = useState();\r\n\r\n    // Delete message useState\r\n    const [showInfo, setShowInfo] = useState(false);\r\n\r\n    // Show confirm modal useState\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    // Form useState\r\n    const [formState, inputHandler, setFormState] = useForm(\r\n        {\r\n            image: {\r\n                value: null,\r\n                isValid: false,\r\n            },\r\n            firstName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            lastName: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            email: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            department: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            role: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            linkedin_url: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    // Fetch User et initialiser le formState\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const userData = await sendRequest(\r\n                    `${process.env.REACT_APP_API_URL}/profile/${auth.userId}`,\r\n                    \"GET\",\r\n                    null,\r\n                    {\r\n                        Authorization: \"Bearer \" + auth.token,\r\n                    }\r\n                );\r\n                setUserDataState(userData);\r\n                setFormState(\r\n                    {\r\n                        image: {\r\n                            value: userData.photo_url,\r\n                            isValid: false,\r\n                        },\r\n                        firstName: {\r\n                            value: userData.firstName,\r\n                            isValid: true,\r\n                        },\r\n                        lastName: {\r\n                            value: userData.lastName,\r\n                            isValid: true,\r\n                        },\r\n                        department: {\r\n                            value: userData.department,\r\n                            isValid: true,\r\n                        },\r\n                        role: {\r\n                            value: userData.role,\r\n                            isValid: true,\r\n                        },\r\n                        email: {\r\n                            value: userData.email,\r\n                            isValid: true,\r\n                        },\r\n                        linkedin_url: {\r\n                            value: userData.linkedin_url,\r\n                            isValid: true,\r\n                        },\r\n                    },\r\n                    true\r\n                );\r\n            } catch (err) {}\r\n        };\r\n        fetchUser();\r\n    }, [sendRequest, auth.userId, auth.token, setFormState]);\r\n\r\n    // Mettre à jour les donnés de l'utilisateur\r\n    const updateProfileHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        formData.append(\"firstName\", formState.inputs.firstName.value);\r\n        formData.append(\"lastName\", formState.inputs.lastName.value);\r\n        formData.append(\"department\", formState.inputs.department.value);\r\n        formData.append(\"role\", formState.inputs.role.value);\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"linkedin_url\", formState.inputs.linkedin_url.value);\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/profile/update`, \"PATCH\", formData, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n\r\n            openConfirmModalHandler();\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Mettre à jour le mot de passe de l'utilisateur\r\n    const updatePasswordHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/profile/update`,\r\n                \"PUT\",\r\n                JSON.stringify({\r\n                    password: formState.inputs.password.value,\r\n                }),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n\r\n            // écran de confirmation\r\n            openConfirmModalHandler();\r\n        } catch (err) {}\r\n    };\r\n\r\n    //  Intention de Supprimer utilisateur\r\n    const showDeleteMessage = (event) => {\r\n        event.preventDefault();\r\n        if (showInfo === false) {\r\n            setShowInfo(true);\r\n        } else {\r\n            setShowInfo(false);\r\n        }\r\n    };\r\n\r\n    //  Supprimer utilisateur\r\n    const deleteUserHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/profile/${auth.userId}`, \"DELETE\", null, {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            auth.logout();\r\n            history.push(`/`);\r\n        } catch (err) {}\r\n    };\r\n\r\n    //  Fonctions écran de confirmation\r\n    const openConfirmModalHandler = () => {\r\n        setShowConfirmModal(true);\r\n    };\r\n\r\n    const closeConfirmModalHandler = () => {\r\n        setShowConfirmModal(false);\r\n        setTimeout(() => {\r\n            history.push(`/profile/${auth.userId}`);\r\n        }, 300);\r\n    };\r\n\r\n    //  Affichage Nav desktop\r\n    let desktopNav;\r\n\r\n    let btnStyle = styles.btnStyle;\r\n    let iconStyle = `${styles.iconStyle} icon_red`;\r\n\r\n    if (width >= 1024) {\r\n        desktopNav = (\r\n            <NavBtn\r\n                id=\"back\"\r\n                name=\"Retourner\"\r\n                icon={back}\r\n                link={`/profile/${auth.userId}`}\r\n                btnStyle={btnStyle}\r\n                iconColor={iconStyle}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!userDataState) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <ConfirmModal\r\n                show={showConfirmModal}\r\n                message=\"Votre profil a été bien mis a jour !\"\r\n                onCancel={closeConfirmModalHandler}\r\n            />\r\n            <div className={`container ${styles.class_mod}`}>\r\n                {!isLoading && userDataState && (\r\n                    <div className={styles.wrapper}>\r\n                        <div className={styles.background_img}></div>\r\n                        <ImageUpload\r\n                            center\r\n                            id=\"image\"\r\n                            onInput={inputHandler}\r\n                            errorText=\"Choisissez une image\"\r\n                            photo_url={userDataState.photo_url}\r\n                        />\r\n                        <h4 className={styles.title}>Vos informations personnelles</h4>\r\n                        {desktopNav}\r\n                        <form id=\"update-form\" className={styles.update_list} onSubmit={updateProfileHandler}>\r\n                            <InputField\r\n                                id=\"firstName\"\r\n                                label=\"Prénom :\"\r\n                                name=\"firstName\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre prénom\"\r\n                                autocomplete=\"given-name\"\r\n                                maxLength=\"45\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(2), MaxLength(45), isText()]}\r\n                                errorText=\"Veuillez rentrer votre prénom\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.firstName}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"lastName\"\r\n                                label=\"Nom :\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre nom\"\r\n                                autocomplete=\"family-name\"\r\n                                maxLength=\"45\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(2), MaxLength(45), isText()]}\r\n                                errorText=\"Veuillez rentrer votre nom de famille\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.lastName}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"email\"\r\n                                label=\"E-mail :\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Votre e-mail\"\r\n                                autocomplete=\"email\"\r\n                                maxLength=\"100\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[isEmail(), MinLength(6), MaxLength(100)]}\r\n                                errorText=\"Votre email n'est pas correct\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.email}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"department\"\r\n                                label=\"Département :\"\r\n                                name=\"department\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre département\"\r\n                                maxLength=\"65\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MaxLength(65), isText()]}\r\n                                errorText=\"Uniquement des lettres\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.department}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"role\"\r\n                                label=\"Description du poste :\"\r\n                                name=\"role\"\r\n                                type=\"text\"\r\n                                placeholder=\"Description du poste\"\r\n                                maxLength=\"65\"\r\n                                element=\"textarea\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MaxLength(65), isText()]}\r\n                                errorText=\"Uniquement des lettres\"\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.role}\r\n                                initialValid={true}\r\n                            />\r\n                            <InputField\r\n                                id=\"linkedin_url\"\r\n                                label=\"Linkedin (facultatif) :\"\r\n                                name=\"linkedin\"\r\n                                type=\"text\"\r\n                                placeholder=\"Votre adresse Linkedin\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[]}\r\n                                onInput={inputHandler}\r\n                                initialValue={userDataState.linkedin_url}\r\n                                initialValid={true}\r\n                            />\r\n                        </form>\r\n                        <UIBtn\r\n                            id=\"update-profile-btn\"\r\n                            form=\"update-form\"\r\n                            name=\"Mettre à jour mon profil\"\r\n                            type=\"submit\"\r\n                            btnType=\"valid\"\r\n                        />\r\n                        <h4 className={styles.title}>Changer mon mot de passe</h4>\r\n                        <form id=\"update-password-form\" className={styles.update_list} onSubmit={updatePasswordHandler}>\r\n                            <InputField\r\n                                id=\"password\"\r\n                                label=\"Mot de passe :\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Votre nouveau mot de passe\"\r\n                                icon={password}\r\n                                alt=\"password icon\"\r\n                                maxLength=\"50\"\r\n                                element=\"input\"\r\n                                hasLabel=\"yes\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(8), MaxLength(50)]}\r\n                                errorText=\"Minimum une majuscule, un chiffre et 8 lettres\"\r\n                                onInput={inputHandler}\r\n                                initialValue={formState.inputs.password.value}\r\n                                initialValid={formState.inputs.password.isValid}\r\n                            />\r\n                        </form>\r\n                        <UIBtn\r\n                            id=\"update-password-btn\"\r\n                            form=\"update-password-form\"\r\n                            name=\"Changer mon mot de passe\"\r\n                            type=\"submit\"\r\n                            btnType=\"valid\"\r\n                        />\r\n                        <h4 className={styles.title}>Supprimer mon compte</h4>\r\n                        <UIBtn\r\n                            id=\"delete-profile-btn\"\r\n                            icon={deleteIcon}\r\n                            name=\"Supprimer\"\r\n                            onClick={showDeleteMessage}\r\n                            btnType=\"warning\"\r\n                            iconColor=\"icon_white\"\r\n                        />\r\n                        <div style={{ display: showInfo === true ? \"block\" : \"none\" }}>\r\n                            <p className={styles.role}>\r\n                                Vous êtes sur le point de supprimer votre compte. Toutes les informations liées à ce\r\n                                compte seront supprimées.\r\n                            </p>\r\n                            <h5 className={styles.title}>Êtes-vous sûr(e) de vouloir supprimer votre compte ?</h5>\r\n                            <div className={styles.btn_block}>\r\n                                <UIBtn\r\n                                    id=\"accept-btn\"\r\n                                    name=\"Oui\"\r\n                                    type=\"submit\"\r\n                                    onClick={deleteUserHandler}\r\n                                    btnType=\"warning\"\r\n                                />\r\n                                <UIBtn id=\"cancel-btn\" name=\"Annuler\" onClick={showDeleteMessage} btnType=\"cancel\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\n\r\n// Components\r\nimport UserHeader from \"../UserHeader/UserHeader\";\r\n\r\n// Styles\r\nimport styles from \"./Comment.module.css\";\r\n\r\nconst Comment = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Request Hook\r\n    const { sendRequest } = useHttpRequest();\r\n\r\n    //Delete Comment\r\n    const DeleteCommentHandler = async () => {\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/posts/comment/${props.id}`, \"DELETE\", null, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            props.onDeleteComment(props.id);\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <UserHeader\r\n                UserId={props.UserId}\r\n                photo_url={props.photo_url}\r\n                firstName={props.firstName}\r\n                lastName={props.lastName}\r\n                date={props.date}\r\n                onDelete={DeleteCommentHandler}\r\n            />\r\n            <div className={styles.block}>\r\n                <p className={styles.text}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { MinLength, MaxLength } from \"../../utils/validators\";\r\n\r\n//Icons\r\nimport send from \"../../images/send-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport Post from \"../../components/Post/Post\";\r\nimport Comment from \"../../components/Comment/Comment\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./CommentPost.module.css\";\r\n\r\nconst CommentPost = () => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // Post ID\r\n    const postId = useParams().id;\r\n\r\n    // Backend Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    //Posts Hook\r\n    const [post, setPost] = useState();\r\n\r\n    //Comments Hook\r\n    const [comments, setComments] = useState();\r\n\r\n    // Form useState\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            comment: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    // Fetch Post\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const post = await sendRequest(`${process.env.REACT_APP_API_URL}/posts/${postId}`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n                setPost(post[0]);\r\n                setComments(post[1].comments_list);\r\n            } catch (err) {}\r\n        };\r\n        fetchPost();\r\n    }, [sendRequest, setPost, auth.token, postId, setComments]);\r\n\r\n    // POST comment Handler\r\n    const postCommentHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const newCommentData = await sendRequest(\r\n                `${process.env.REACT_APP_API_URL}/posts/comment`,\r\n                \"POST\",\r\n                JSON.stringify({\r\n                    postId: post.PostId,\r\n                    message: formState.inputs.comment.value,\r\n                }),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                }\r\n            );\r\n            setComments((prevComments) => [...prevComments, newCommentData]);\r\n            inputHandler(\"comment\", \"\", false);\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Delete POST Handler\r\n    const deletePostHandler = (deletedPostId) => {\r\n        setPost((prevPosts) => prevPosts.filter((post) => post.PostId !== deletedPostId));\r\n    };\r\n\r\n    // Delete COMMENT Handler\r\n    const deleteCommentHandler = (deletedCommentId) => {\r\n        setComments((prevComments) => prevComments.filter((comment) => comment.id !== deletedCommentId));\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!post) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No User Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <div className=\"container\">\r\n                {!isLoading && post && comments && (\r\n                    <div className={styles.wrapper}>\r\n                        <Post\r\n                            id={post.PostId}\r\n                            UserId={post.UserId}\r\n                            photo_url={post.photo_url}\r\n                            firstName={post.firstName}\r\n                            lastName={post.lastName}\r\n                            date={post.post_date}\r\n                            category={post.category}\r\n                            title={post.title}\r\n                            image_url={post.image_url}\r\n                            likes={post.likes}\r\n                            dislikes={post.dislikes}\r\n                            comments={post.comments}\r\n                            userReaction={post.userReaction}\r\n                            onDelete={deletePostHandler}\r\n                        />\r\n                        <section>\r\n                            {comments.map((comment, index) => {\r\n                                return (\r\n                                    <Comment\r\n                                        key={index}\r\n                                        id={comment.id}\r\n                                        UserId={comment.UserId}\r\n                                        photo_url={comment.photo_url}\r\n                                        firstName={comment.firstName}\r\n                                        lastName={comment.lastName}\r\n                                        date={comment.comment_date}\r\n                                        message={comment.message}\r\n                                        onDeleteComment={deleteCommentHandler}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </section>\r\n                        <div className={styles.comment_wrap}>\r\n                            <form className={styles.comment_form} id=\"comment-form\" onSubmit={postCommentHandler}>\r\n                                <InputField\r\n                                    id=\"comment\"\r\n                                    className={styles.box}\r\n                                    name=\"comment\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Écrivez un commentaire\"\r\n                                    maxLength=\"65\"\r\n                                    element=\"textarea\"\r\n                                    hasLabel=\"yes\"\r\n                                    textIsWhite=\"no\"\r\n                                    validators={[MinLength(2), MaxLength(65)]}\r\n                                    errorText=\"Veillez écrire un commentaire\"\r\n                                    onInput={inputHandler}\r\n                                    initialValue=\"\"\r\n                                    initialValid={false}\r\n                                />\r\n                            </form>\r\n                            <button form=\"comment-form\" className={styles.btn} type=\"submit\">\r\n                                <img className={styles.icon} src={send} alt=\"publier commentaire\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentPost;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./SelectField.module.css\";\r\n\r\n// Component\r\nconst SelectField = (props) => {\r\n    // UseState des catégories\r\n    const [category, setCategory] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const categoryPickerRef = useRef();\r\n\r\n    // Fontion qui prend l'option du select\r\n    const pickedHandler = (event) => {\r\n        let pickedCategory;\r\n        let categoryIsValid = isValid;\r\n\r\n        // Si le valeur dans l'événement est different à rien\r\n        if (event.target.value !== \" \") {\r\n            pickedCategory = event.target.value;\r\n            setCategory(pickedCategory);\r\n            setIsValid(true);\r\n            categoryIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            categoryIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedCategory, categoryIsValid);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dropdown}>\r\n            <label className={styles.label} htmlFor={props.id}>\r\n                {props.label}\r\n            </label>\r\n            <select\r\n                id={props.id}\r\n                className={`${styles.dropdown_btn}\r\n        ${!isValid && category && styles.invalid}`}\r\n                ref={categoryPickerRef}\r\n                onChange={pickedHandler}\r\n            >\r\n                <option className={styles.option} value=\" \">\r\n                    Veuillez choisir une catégorie\r\n                </option>\r\n                {props.options.map((option, index) => {\r\n                    return (\r\n                        <option className={styles.option} key={index} value={option.id}>\r\n                            {option.categoryIs}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n            {!isValid && category && <p className={styles.input_error}>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useForm } from \"../../hooks/form-hook\";\r\nimport { useWindowDimensions } from \"../../hooks/window-hook\";\r\nimport { useHttpRequest } from \"../../hooks/httpRequest-hook\";\r\nimport { MinLength, MaxLength } from \"../../utils/validators\";\r\n\r\n// icons\r\nimport backIcon from \"../../images/back-icon.svg\";\r\n\r\n// Components\r\nimport ErrorModal from \"../../components/ErrorModal/ErrorModal\";\r\nimport UIBtn from \"../../components/Buttons/UIBtn/UIBtn\";\r\nimport ImageUpload from \"../../components/ImageUpload/ImageUpload\";\r\nimport SelectField from \"../../components/SelectField/SelectField\";\r\nimport InputField from \"../../components/InputField/InputField\";\r\nimport Spinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\n// Styles\r\nimport styles from \"./NewPost.module.css\";\r\n\r\nconst NewPost = (props) => {\r\n    // Authentication context\r\n    const auth = useContext(AuthContext);\r\n\r\n    // History context\r\n    const history = useHistory();\r\n\r\n    // Request Hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpRequest();\r\n\r\n    // Window Size\r\n    const { width } = useWindowDimensions();\r\n\r\n    //Categories State\r\n    const [categories, setCategories] = useState();\r\n\r\n    // Form State\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            title: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            category: {\r\n                value: null,\r\n                isValid: false,\r\n            },\r\n            image: {\r\n                value: null,\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    //Fetch Categories\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const categories = await sendRequest(`${process.env.REACT_APP_API_URL}/posts/categories`, \"GET\", null, {\r\n                    Authorization: \"Bearer \" + auth.token,\r\n                });\r\n\r\n                setCategories(categories);\r\n            } catch (err) {}\r\n        };\r\n        fetchPosts();\r\n    }, [sendRequest, auth.token, setCategories]);\r\n\r\n    // Send Post au Backend\r\n    const sendPostHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!formState.isValid) {\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"title\", formState.inputs.title.value);\r\n        formData.append(\"category\", formState.inputs.category.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n\r\n        // console.log(\"To Backend =>\", formData);\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_API_URL}/posts`, \"POST\", formData, {\r\n                Authorization: \"Bearer \" + auth.token,\r\n            });\r\n            history.push(`/posts`);\r\n        } catch (err) {}\r\n    };\r\n\r\n    // Back Button\r\n    const backHandle = (e) => {\r\n        e.preventDefault();\r\n        props.history.goBack();\r\n    };\r\n\r\n    // Affichage des boutons pour Desktop\r\n    let sendBtn;\r\n    let backBtn;\r\n\r\n    if (width >= 1024) {\r\n        sendBtn = (\r\n            <div className={styles.send_btn}>\r\n                <UIBtn id=\"send-post-btn\" form=\"send-post-form\" name=\"Publier\" type=\"submit\" btnType=\"valid\" />\r\n            </div>\r\n        );\r\n        backBtn = (\r\n            <button className={styles.back_btn} onClick={backHandle}>\r\n                <img className=\"icon_red\" src={backIcon} alt=\"\" />\r\n            </button>\r\n        );\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className=\"spinner\">\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!categories) {\r\n        return (\r\n            <>\r\n                <ErrorModal error={error} onClear={clearError} />\r\n                <div className={styles.container}>\r\n                    <h2>No Data!</h2>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {!isLoading && categories && (\r\n                <>\r\n                    <header className={styles.head}>\r\n                        <div className={styles.tab}>\r\n                            {backBtn}\r\n                            <div className={styles.tab_border}>\r\n                                <h3 className={styles.title}>Nouvelle Publication</h3>\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"container\">\r\n                        <form className={styles.form} id=\"send-post-form\" onSubmit={sendPostHandler}>\r\n                            <InputField\r\n                                id=\"title\"\r\n                                name=\"title\"\r\n                                type=\"text\"\r\n                                placeholder=\"Titre ou message de la publication\"\r\n                                maxLength=\"100\"\r\n                                element=\"textarea\"\r\n                                hasLabel=\"no\"\r\n                                textIsWhite=\"no\"\r\n                                validators={[MinLength(2), MaxLength(100)]}\r\n                                errorText=\"Veuillez écrire un commentaire pour votre publication\"\r\n                                onInput={inputHandler}\r\n                                initialValue={formState.inputs.title.value}\r\n                                initialValid={formState.inputs.title.isValid}\r\n                            />\r\n                            <ImageUpload\r\n                                center\r\n                                id=\"image\"\r\n                                onInput={inputHandler}\r\n                                errorText=\"Choisissez une image ou un gif\"\r\n                            />\r\n                            <SelectField\r\n                                id=\"category\"\r\n                                label=\"Catégories :\"\r\n                                name=\"catégories\"\r\n                                onInput={inputHandler}\r\n                                options={categories}\r\n                                errorText=\"Choisissez une catégorie\"\r\n                            />\r\n                            {sendBtn}\r\n                        </form>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./hooks/auth-hook\";\r\nimport { AuthContext } from \"./context/auth-context\";\r\n\r\n// Containers\r\nimport Layout from \"./containers/Layout/Layout\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport Login from \"./containers/Login/Login\";\r\nimport Signup from \"./containers/SignUp/SignUp\";\r\nimport Posts from \"./containers/Posts/Posts\";\r\nimport Menu from \"./containers/Menu/Menu\";\r\nimport UserProfile from \"./containers/UserProfile/UserProfile\";\r\nimport UpdateProfile from \"./containers/UpdateProfile/UpdateProfile\";\r\nimport CommentPost from \"./containers/CommentPost/CommentPost\";\r\nimport NewPost from \"./containers/NewPost/NewPost\";\r\n\r\n// Styles\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n    const { userId, token, account, login, logout } = useAuth();\r\n\r\n    let routes;\r\n\r\n    if (token) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path={`${process.env.GITHUB_URL}/posts`} exact component={Posts} />\r\n                <Route path={`${process.env.GITHUB_URL}/posts/new`} exact component={NewPost} />\r\n                <Route path={`${process.env.GITHUB_URL}/menu`} exact component={Menu} />\r\n                <Route path={`${process.env.GITHUB_URL}/profile/:id`} exact component={UserProfile} />\r\n                <Route path={`${process.env.GITHUB_URL}/profile/:id/update`} exact component={UpdateProfile} />\r\n                <Route path={`${process.env.GITHUB_URL}/posts/:id`} exact component={CommentPost} />\r\n                <Redirect to={`${process.env.GITHUB_URL}/posts`} />\r\n            </Switch>\r\n        );\r\n    } else {\r\n        routes = (\r\n            <Switch>\r\n                <Route path={`${process.env.GITHUB_URL}/`} exact component={Home} />\r\n                <Route path={`${process.env.GITHUB_URL}/login`} exact component={Login} />\r\n                <Route path={`${process.env.GITHUB_URL}/signup`} exact component={Signup} />\r\n                <Redirect to={`${process.env.GITHUB_URL}/`} />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    // if (token) {\r\n    //     routes = (\r\n    //         <Switch>\r\n    //             <Route path=\"/posts\" exact component={Posts} />\r\n    //             <Route path=\"/posts/new\" exact component={NewPost} />\r\n    //             <Route path=\"/menu\" exact component={Menu} />\r\n    //             <Route path=\"/profile/:id\" exact component={UserProfile} />\r\n    //             <Route path=\"/profile/:id/update\" exact component={UpdateProfile} />\r\n    //             <Route path=\"/posts/:id\" exact component={CommentPost} />\r\n    //             <Redirect to=\"/posts\" />\r\n    //         </Switch>\r\n    //     );\r\n    // } else {\r\n    //     routes = (\r\n    //         <Switch>\r\n    //             <Route path=\"/\" exact component={Home} />\r\n    //             <Route path=\"/login\" exact component={Login} />\r\n    //             <Route path=\"/signup\" exact component={Signup} />\r\n    //             <Redirect to=\"/\" />\r\n    //         </Switch>\r\n    //     );\r\n    // }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isLoggedIn: !!token,\r\n                token: token,\r\n                userId: userId,\r\n                account: account,\r\n                login: login,\r\n                logout: logout,\r\n            }}\r\n        >\r\n            <Layout>{routes}</Layout>\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}